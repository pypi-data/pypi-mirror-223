from scinode.core.node import Node

func_items = [
    ["DataSource", "DataSource", "DataSource"],
    ["MachAr", "MachAr", "MachAr"],
    ["Tester", "Tester", "Tester"],
    ["abs", "abs", "abs"],
    ["absolute", "absolute", "absolute"],
    ["add", "add", "add"],
    ["add_docstring", "add_docstring", "add_docstring"],
    ["add_newdoc", "add_newdoc", "add_newdoc"],
    ["add_newdoc_ufunc", "add_newdoc_ufunc", "add_newdoc_ufunc"],
    ["alen", "alen", "alen"],
    ["all", "all", "all"],
    ["allclose", "allclose", "allclose"],
    ["alltrue", "alltrue", "alltrue"],
    ["amax", "amax", "amax"],
    ["amin", "amin", "amin"],
    ["angle", "angle", "angle"],
    ["any", "any", "any"],
    ["append", "append", "append"],
    ["apply_along_axis", "apply_along_axis", "apply_along_axis"],
    ["apply_over_axes", "apply_over_axes", "apply_over_axes"],
    ["arange", "arange", "arange"],
    ["arccos", "arccos", "arccos"],
    ["arccosh", "arccosh", "arccosh"],
    ["arcsin", "arcsin", "arcsin"],
    ["arcsinh", "arcsinh", "arcsinh"],
    ["arctan", "arctan", "arctan"],
    ["arctan2", "arctan2", "arctan2"],
    ["arctanh", "arctanh", "arctanh"],
    ["argmax", "argmax", "argmax"],
    ["argmin", "argmin", "argmin"],
    ["argpartition", "argpartition", "argpartition"],
    ["argsort", "argsort", "argsort"],
    ["argwhere", "argwhere", "argwhere"],
    ["around", "around", "around"],
    ["array", "array", "array"],
    ["array2string", "array2string", "array2string"],
    ["array_equal", "array_equal", "array_equal"],
    ["array_equiv", "array_equiv", "array_equiv"],
    ["array_repr", "array_repr", "array_repr"],
    ["array_split", "array_split", "array_split"],
    ["array_str", "array_str", "array_str"],
    ["asanyarray", "asanyarray", "asanyarray"],
    ["asarray", "asarray", "asarray"],
    ["asarray_chkfinite", "asarray_chkfinite", "asarray_chkfinite"],
    ["ascontiguousarray", "ascontiguousarray", "ascontiguousarray"],
    ["asfarray", "asfarray", "asfarray"],
    ["asfortranarray", "asfortranarray", "asfortranarray"],
    ["asmatrix", "asmatrix", "asmatrix"],
    ["asscalar", "asscalar", "asscalar"],
    ["atleast_1d", "atleast_1d", "atleast_1d"],
    ["atleast_2d", "atleast_2d", "atleast_2d"],
    ["atleast_3d", "atleast_3d", "atleast_3d"],
    ["average", "average", "average"],
    ["bartlett", "bartlett", "bartlett"],
    ["base_repr", "base_repr", "base_repr"],
    ["binary_repr", "binary_repr", "binary_repr"],
    ["bincount", "bincount", "bincount"],
    ["bitwise_and", "bitwise_and", "bitwise_and"],
    ["bitwise_not", "bitwise_not", "bitwise_not"],
    ["bitwise_or", "bitwise_or", "bitwise_or"],
    ["bitwise_xor", "bitwise_xor", "bitwise_xor"],
    ["blackman", "blackman", "blackman"],
    ["block", "block", "block"],
    ["bmat", "bmat", "bmat"],
    ["bool", "bool", "bool"],
    ["bool8", "bool8", "bool8"],
    ["bool_", "bool_", "bool_"],
    ["broadcast", "broadcast", "broadcast"],
    ["broadcast_arrays", "broadcast_arrays", "broadcast_arrays"],
    ["broadcast_to", "broadcast_to", "broadcast_to"],
    ["busday_count", "busday_count", "busday_count"],
    ["busday_offset", "busday_offset", "busday_offset"],
    ["busdaycalendar", "busdaycalendar", "busdaycalendar"],
    ["byte", "byte", "byte"],
    ["byte_bounds", "byte_bounds", "byte_bounds"],
    ["bytes0", "bytes0", "bytes0"],
    ["bytes_", "bytes_", "bytes_"],
    ["can_cast", "can_cast", "can_cast"],
    ["cbrt", "cbrt", "cbrt"],
    ["cdouble", "cdouble", "cdouble"],
    ["ceil", "ceil", "ceil"],
    ["cfloat", "cfloat", "cfloat"],
    ["character", "character", "character"],
    ["chararray", "chararray", "chararray"],
    ["choose", "choose", "choose"],
    ["clip", "clip", "clip"],
    ["clongdouble", "clongdouble", "clongdouble"],
    ["clongfloat", "clongfloat", "clongfloat"],
    ["column_stack", "column_stack", "column_stack"],
    ["common_type", "common_type", "common_type"],
    ["compare_chararrays", "compare_chararrays", "compare_chararrays"],
    ["complex", "complex", "complex"],
    ["complex128", "complex128", "complex128"],
    ["complex256", "complex256", "complex256"],
    ["complex64", "complex64", "complex64"],
    ["complex_", "complex_", "complex_"],
    ["complexfloating", "complexfloating", "complexfloating"],
    ["compress", "compress", "compress"],
    ["concatenate", "concatenate", "concatenate"],
    ["conj", "conj", "conj"],
    ["conjugate", "conjugate", "conjugate"],
    ["convolve", "convolve", "convolve"],
    ["copy", "copy", "copy"],
    ["copysign", "copysign", "copysign"],
    ["copyto", "copyto", "copyto"],
    ["corrcoef", "corrcoef", "corrcoef"],
    ["correlate", "correlate", "correlate"],
    ["cos", "cos", "cos"],
    ["cosh", "cosh", "cosh"],
    ["count_nonzero", "count_nonzero", "count_nonzero"],
    ["cov", "cov", "cov"],
    ["cross", "cross", "cross"],
    ["csingle", "csingle", "csingle"],
    ["cumprod", "cumprod", "cumprod"],
    ["cumproduct", "cumproduct", "cumproduct"],
    ["cumsum", "cumsum", "cumsum"],
    ["datetime64", "datetime64", "datetime64"],
    ["datetime_as_string", "datetime_as_string", "datetime_as_string"],
    ["datetime_data", "datetime_data", "datetime_data"],
    ["deg2rad", "deg2rad", "deg2rad"],
    ["degrees", "degrees", "degrees"],
    ["delete", "delete", "delete"],
    ["deprecate", "deprecate", "deprecate"],
    ["deprecate_with_doc", "deprecate_with_doc", "deprecate_with_doc"],
    ["diag", "diag", "diag"],
    ["diag_indices", "diag_indices", "diag_indices"],
    ["diag_indices_from", "diag_indices_from", "diag_indices_from"],
    ["diagflat", "diagflat", "diagflat"],
    ["diagonal", "diagonal", "diagonal"],
    ["diff", "diff", "diff"],
    ["digitize", "digitize", "digitize"],
    ["disp", "disp", "disp"],
    ["divide", "divide", "divide"],
    ["divmod", "divmod", "divmod"],
    ["dot", "dot", "dot"],
    ["double", "double", "double"],
    ["dsplit", "dsplit", "dsplit"],
    ["dstack", "dstack", "dstack"],
    ["dtype", "dtype", "dtype"],
    ["ediff1d", "ediff1d", "ediff1d"],
    ["einsum", "einsum", "einsum"],
    ["einsum_path", "einsum_path", "einsum_path"],
    ["empty", "empty", "empty"],
    ["empty_like", "empty_like", "empty_like"],
    ["equal", "equal", "equal"],
    ["errstate", "errstate", "errstate"],
    ["exp", "exp", "exp"],
    ["exp2", "exp2", "exp2"],
    ["expand_dims", "expand_dims", "expand_dims"],
    ["expm1", "expm1", "expm1"],
    ["extract", "extract", "extract"],
    ["eye", "eye", "eye"],
    ["fabs", "fabs", "fabs"],
    ["fastCopyAndTranspose", "fastCopyAndTranspose", "fastCopyAndTranspose"],
    ["fill_diagonal", "fill_diagonal", "fill_diagonal"],
    ["find_common_type", "find_common_type", "find_common_type"],
    ["finfo", "finfo", "finfo"],
    ["fix", "fix", "fix"],
    ["flatiter", "flatiter", "flatiter"],
    ["flatnonzero", "flatnonzero", "flatnonzero"],
    ["flexible", "flexible", "flexible"],
    ["flip", "flip", "flip"],
    ["fliplr", "fliplr", "fliplr"],
    ["flipud", "flipud", "flipud"],
    ["float", "float", "float"],
    ["float128", "float128", "float128"],
    ["float16", "float16", "float16"],
    ["float32", "float32", "float32"],
    ["float64", "float64", "float64"],
    ["float_", "float_", "float_"],
    ["float_power", "float_power", "float_power"],
    ["floating", "floating", "floating"],
    ["floor", "floor", "floor"],
    ["floor_divide", "floor_divide", "floor_divide"],
    ["fmax", "fmax", "fmax"],
    ["fmin", "fmin", "fmin"],
    ["fmod", "fmod", "fmod"],
    ["format_float_positional", "format_float_positional", "format_float_positional"],
    ["format_float_scientific", "format_float_scientific", "format_float_scientific"],
    ["format_parser", "format_parser", "format_parser"],
    ["frexp", "frexp", "frexp"],
    ["frombuffer", "frombuffer", "frombuffer"],
    ["fromfile", "fromfile", "fromfile"],
    ["fromfunction", "fromfunction", "fromfunction"],
    ["fromiter", "fromiter", "fromiter"],
    ["frompyfunc", "frompyfunc", "frompyfunc"],
    ["fromregex", "fromregex", "fromregex"],
    ["fromstring", "fromstring", "fromstring"],
    ["full", "full", "full"],
    ["full_like", "full_like", "full_like"],
    ["fv", "fv", "fv"],
    ["gcd", "gcd", "gcd"],
    ["generic", "generic", "generic"],
    ["genfromtxt", "genfromtxt", "genfromtxt"],
    ["geomspace", "geomspace", "geomspace"],
    ["get_array_wrap", "get_array_wrap", "get_array_wrap"],
    ["get_include", "get_include", "get_include"],
    ["get_printoptions", "get_printoptions", "get_printoptions"],
    ["getbufsize", "getbufsize", "getbufsize"],
    ["geterr", "geterr", "geterr"],
    ["geterrcall", "geterrcall", "geterrcall"],
    ["geterrobj", "geterrobj", "geterrobj"],
    ["gradient", "gradient", "gradient"],
    ["greater", "greater", "greater"],
    ["greater_equal", "greater_equal", "greater_equal"],
    ["half", "half", "half"],
    ["hamming", "hamming", "hamming"],
    ["hanning", "hanning", "hanning"],
    ["heaviside", "heaviside", "heaviside"],
    ["histogram", "histogram", "histogram"],
    ["histogram2d", "histogram2d", "histogram2d"],
    ["histogram_bin_edges", "histogram_bin_edges", "histogram_bin_edges"],
    ["histogramdd", "histogramdd", "histogramdd"],
    ["hsplit", "hsplit", "hsplit"],
    ["hstack", "hstack", "hstack"],
    ["hypot", "hypot", "hypot"],
    ["i0", "i0", "i0"],
    ["identity", "identity", "identity"],
    ["iinfo", "iinfo", "iinfo"],
    ["imag", "imag", "imag"],
    ["in1d", "in1d", "in1d"],
    ["indices", "indices", "indices"],
    ["inexact", "inexact", "inexact"],
    ["info", "info", "info"],
    ["inner", "inner", "inner"],
    ["insert", "insert", "insert"],
    ["int", "int", "int"],
    ["int0", "int0", "int0"],
    ["int16", "int16", "int16"],
    ["int32", "int32", "int32"],
    ["int64", "int64", "int64"],
    ["int8", "int8", "int8"],
    ["int_", "int_", "int_"],
    ["intc", "intc", "intc"],
    ["integer", "integer", "integer"],
    ["interp", "interp", "interp"],
    ["intersect1d", "intersect1d", "intersect1d"],
    ["intp", "intp", "intp"],
    ["invert", "invert", "invert"],
    ["ipmt", "ipmt", "ipmt"],
    ["irr", "irr", "irr"],
    ["is_busday", "is_busday", "is_busday"],
    ["isclose", "isclose", "isclose"],
    ["iscomplex", "iscomplex", "iscomplex"],
    ["iscomplexobj", "iscomplexobj", "iscomplexobj"],
    ["isfinite", "isfinite", "isfinite"],
    ["isfortran", "isfortran", "isfortran"],
    ["isin", "isin", "isin"],
    ["isinf", "isinf", "isinf"],
    ["isnan", "isnan", "isnan"],
    ["isnat", "isnat", "isnat"],
    ["isneginf", "isneginf", "isneginf"],
    ["isposinf", "isposinf", "isposinf"],
    ["isreal", "isreal", "isreal"],
    ["isrealobj", "isrealobj", "isrealobj"],
    ["isscalar", "isscalar", "isscalar"],
    ["issctype", "issctype", "issctype"],
    ["issubclass_", "issubclass_", "issubclass_"],
    ["issubdtype", "issubdtype", "issubdtype"],
    ["issubsctype", "issubsctype", "issubsctype"],
    ["iterable", "iterable", "iterable"],
    ["ix_", "ix_", "ix_"],
    ["kaiser", "kaiser", "kaiser"],
    ["kron", "kron", "kron"],
    ["lcm", "lcm", "lcm"],
    ["ldexp", "ldexp", "ldexp"],
    ["left_shift", "left_shift", "left_shift"],
    ["less", "less", "less"],
    ["less_equal", "less_equal", "less_equal"],
    ["lexsort", "lexsort", "lexsort"],
    ["linspace", "linspace", "linspace"],
    ["load", "load", "load"],
    ["loads", "loads", "loads"],
    ["loadtxt", "loadtxt", "loadtxt"],
    ["log", "log", "log"],
    ["log10", "log10", "log10"],
    ["log1p", "log1p", "log1p"],
    ["log2", "log2", "log2"],
    ["logaddexp", "logaddexp", "logaddexp"],
    ["logaddexp2", "logaddexp2", "logaddexp2"],
    ["logical_and", "logical_and", "logical_and"],
    ["logical_not", "logical_not", "logical_not"],
    ["logical_or", "logical_or", "logical_or"],
    ["logical_xor", "logical_xor", "logical_xor"],
    ["logspace", "logspace", "logspace"],
    ["long", "long", "long"],
    ["longcomplex", "longcomplex", "longcomplex"],
    ["longdouble", "longdouble", "longdouble"],
    ["longfloat", "longfloat", "longfloat"],
    ["longlong", "longlong", "longlong"],
    ["lookfor", "lookfor", "lookfor"],
    ["mafromtxt", "mafromtxt", "mafromtxt"],
    ["mask_indices", "mask_indices", "mask_indices"],
    ["mat", "mat", "mat"],
    ["matmul", "matmul", "matmul"],
    ["matrix", "matrix", "matrix"],
    ["max", "max", "max"],
    ["maximum", "maximum", "maximum"],
    ["maximum_sctype", "maximum_sctype", "maximum_sctype"],
    ["may_share_memory", "may_share_memory", "may_share_memory"],
    ["mean", "mean", "mean"],
    ["median", "median", "median"],
    ["memmap", "memmap", "memmap"],
    ["meshgrid", "meshgrid", "meshgrid"],
    ["min", "min", "min"],
    ["min_scalar_type", "min_scalar_type", "min_scalar_type"],
    ["minimum", "minimum", "minimum"],
    ["mintypecode", "mintypecode", "mintypecode"],
    ["mirr", "mirr", "mirr"],
    ["mod", "mod", "mod"],
    ["modf", "modf", "modf"],
    ["moveaxis", "moveaxis", "moveaxis"],
    ["msort", "msort", "msort"],
    ["multiply", "multiply", "multiply"],
    ["nan_to_num", "nan_to_num", "nan_to_num"],
    ["nanargmax", "nanargmax", "nanargmax"],
    ["nanargmin", "nanargmin", "nanargmin"],
    ["nancumprod", "nancumprod", "nancumprod"],
    ["nancumsum", "nancumsum", "nancumsum"],
    ["nanmax", "nanmax", "nanmax"],
    ["nanmean", "nanmean", "nanmean"],
    ["nanmedian", "nanmedian", "nanmedian"],
    ["nanmin", "nanmin", "nanmin"],
    ["nanpercentile", "nanpercentile", "nanpercentile"],
    ["nanprod", "nanprod", "nanprod"],
    ["nanquantile", "nanquantile", "nanquantile"],
    ["nanstd", "nanstd", "nanstd"],
    ["nansum", "nansum", "nansum"],
    ["nanvar", "nanvar", "nanvar"],
    ["ndarray", "ndarray", "ndarray"],
    ["ndenumerate", "ndenumerate", "ndenumerate"],
    ["ndfromtxt", "ndfromtxt", "ndfromtxt"],
    ["ndim", "ndim", "ndim"],
    ["ndindex", "ndindex", "ndindex"],
    ["nditer", "nditer", "nditer"],
    ["negative", "negative", "negative"],
    ["nested_iters", "nested_iters", "nested_iters"],
    ["nextafter", "nextafter", "nextafter"],
    ["nonzero", "nonzero", "nonzero"],
    ["not_equal", "not_equal", "not_equal"],
    ["nper", "nper", "nper"],
    ["npv", "npv", "npv"],
    ["number", "number", "number"],
    ["obj2sctype", "obj2sctype", "obj2sctype"],
    ["object", "object", "object"],
    ["object0", "object0", "object0"],
    ["object_", "object_", "object_"],
    ["ones", "ones", "ones"],
    ["ones_like", "ones_like", "ones_like"],
    ["outer", "outer", "outer"],
    ["packbits", "packbits", "packbits"],
    ["pad", "pad", "pad"],
    ["partition", "partition", "partition"],
    ["percentile", "percentile", "percentile"],
    ["piecewise", "piecewise", "piecewise"],
    ["place", "place", "place"],
    ["pmt", "pmt", "pmt"],
    ["poly", "poly", "poly"],
    ["poly1d", "poly1d", "poly1d"],
    ["polyadd", "polyadd", "polyadd"],
    ["polyder", "polyder", "polyder"],
    ["polydiv", "polydiv", "polydiv"],
    ["polyfit", "polyfit", "polyfit"],
    ["polyint", "polyint", "polyint"],
    ["polymul", "polymul", "polymul"],
    ["polysub", "polysub", "polysub"],
    ["polyval", "polyval", "polyval"],
    ["positive", "positive", "positive"],
    ["power", "power", "power"],
    ["ppmt", "ppmt", "ppmt"],
    ["printoptions", "printoptions", "printoptions"],
    ["prod", "prod", "prod"],
    ["product", "product", "product"],
    ["promote_types", "promote_types", "promote_types"],
    ["ptp", "ptp", "ptp"],
    ["put", "put", "put"],
    ["put_along_axis", "put_along_axis", "put_along_axis"],
    ["putmask", "putmask", "putmask"],
    ["pv", "pv", "pv"],
    ["quantile", "quantile", "quantile"],
    ["rad2deg", "rad2deg", "rad2deg"],
    ["radians", "radians", "radians"],
    ["rate", "rate", "rate"],
    ["ravel", "ravel", "ravel"],
    ["ravel_multi_index", "ravel_multi_index", "ravel_multi_index"],
    ["real", "real", "real"],
    ["real_if_close", "real_if_close", "real_if_close"],
    ["recarray", "recarray", "recarray"],
    ["recfromcsv", "recfromcsv", "recfromcsv"],
    ["recfromtxt", "recfromtxt", "recfromtxt"],
    ["reciprocal", "reciprocal", "reciprocal"],
    ["record", "record", "record"],
    ["remainder", "remainder", "remainder"],
    ["repeat", "repeat", "repeat"],
    ["require", "require", "require"],
    ["reshape", "reshape", "reshape"],
    ["resize", "resize", "resize"],
    ["result_type", "result_type", "result_type"],
    ["right_shift", "right_shift", "right_shift"],
    ["rint", "rint", "rint"],
    ["roll", "roll", "roll"],
    ["rollaxis", "rollaxis", "rollaxis"],
    ["roots", "roots", "roots"],
    ["rot90", "rot90", "rot90"],
    ["round", "round", "round"],
    ["round_", "round_", "round_"],
    ["row_stack", "row_stack", "row_stack"],
    ["safe_eval", "safe_eval", "safe_eval"],
    ["save", "save", "save"],
    ["savetxt", "savetxt", "savetxt"],
    ["savez", "savez", "savez"],
    ["savez_compressed", "savez_compressed", "savez_compressed"],
    ["sctype2char", "sctype2char", "sctype2char"],
    ["searchsorted", "searchsorted", "searchsorted"],
    ["select", "select", "select"],
    ["set_numeric_ops", "set_numeric_ops", "set_numeric_ops"],
    ["set_printoptions", "set_printoptions", "set_printoptions"],
    ["set_string_function", "set_string_function", "set_string_function"],
    ["setbufsize", "setbufsize", "setbufsize"],
    ["setdiff1d", "setdiff1d", "setdiff1d"],
    ["seterr", "seterr", "seterr"],
    ["seterrcall", "seterrcall", "seterrcall"],
    ["seterrobj", "seterrobj", "seterrobj"],
    ["setxor1d", "setxor1d", "setxor1d"],
    ["shape", "shape", "shape"],
    ["shares_memory", "shares_memory", "shares_memory"],
    ["short", "short", "short"],
    ["show_config", "show_config", "show_config"],
    ["sign", "sign", "sign"],
    ["signbit", "signbit", "signbit"],
    ["signedinteger", "signedinteger", "signedinteger"],
    ["sin", "sin", "sin"],
    ["sinc", "sinc", "sinc"],
    ["single", "single", "single"],
    ["singlecomplex", "singlecomplex", "singlecomplex"],
    ["sinh", "sinh", "sinh"],
    ["size", "size", "size"],
    ["sometrue", "sometrue", "sometrue"],
    ["sort", "sort", "sort"],
    ["sort_complex", "sort_complex", "sort_complex"],
    ["source", "source", "source"],
    ["spacing", "spacing", "spacing"],
    ["split", "split", "split"],
    ["sqrt", "sqrt", "sqrt"],
    ["square", "square", "square"],
    ["squeeze", "squeeze", "squeeze"],
    ["stack", "stack", "stack"],
    ["std", "std", "std"],
    ["str", "str", "str"],
    ["str0", "str0", "str0"],
    ["str_", "str_", "str_"],
    ["string_", "string_", "string_"],
    ["subtract", "subtract", "subtract"],
    ["sum", "sum", "sum"],
    ["swapaxes", "swapaxes", "swapaxes"],
    ["take", "take", "take"],
    ["take_along_axis", "take_along_axis", "take_along_axis"],
    ["tan", "tan", "tan"],
    ["tanh", "tanh", "tanh"],
    ["tensordot", "tensordot", "tensordot"],
    ["test", "test", "test"],
    ["tile", "tile", "tile"],
    ["timedelta64", "timedelta64", "timedelta64"],
    ["trace", "trace", "trace"],
    ["transpose", "transpose", "transpose"],
    ["trapz", "trapz", "trapz"],
    ["tri", "tri", "tri"],
    ["tril", "tril", "tril"],
    ["tril_indices", "tril_indices", "tril_indices"],
    ["tril_indices_from", "tril_indices_from", "tril_indices_from"],
    ["trim_zeros", "trim_zeros", "trim_zeros"],
    ["triu", "triu", "triu"],
    ["triu_indices", "triu_indices", "triu_indices"],
    ["triu_indices_from", "triu_indices_from", "triu_indices_from"],
    ["true_divide", "true_divide", "true_divide"],
    ["trunc", "trunc", "trunc"],
    ["typename", "typename", "typename"],
    ["ubyte", "ubyte", "ubyte"],
    ["ufunc", "ufunc", "ufunc"],
    ["uint", "uint", "uint"],
    ["uint0", "uint0", "uint0"],
    ["uint16", "uint16", "uint16"],
    ["uint32", "uint32", "uint32"],
    ["uint64", "uint64", "uint64"],
    ["uint8", "uint8", "uint8"],
    ["uintc", "uintc", "uintc"],
    ["uintp", "uintp", "uintp"],
    ["ulonglong", "ulonglong", "ulonglong"],
    ["unicode", "unicode", "unicode"],
    ["unicode_", "unicode_", "unicode_"],
    ["union1d", "union1d", "union1d"],
    ["unique", "unique", "unique"],
    ["unpackbits", "unpackbits", "unpackbits"],
    ["unravel_index", "unravel_index", "unravel_index"],
    ["unsignedinteger", "unsignedinteger", "unsignedinteger"],
    ["unwrap", "unwrap", "unwrap"],
    ["ushort", "ushort", "ushort"],
    ["vander", "vander", "vander"],
    ["var", "var", "var"],
    ["vdot", "vdot", "vdot"],
    ["vectorize", "vectorize", "vectorize"],
    ["void", "void", "void"],
    ["void0", "void0", "void0"],
    ["vsplit", "vsplit", "vsplit"],
    ["vstack", "vstack", "vstack"],
    ["where", "where", "where"],
    ["who", "who", "who"],
    ["zeros", "zeros", "zeros"],
    ["zeros_like", "zeros_like", "zeros_like"],
]


class ScinodeNumpy(Node):
    identifier = "Numpy"
    name = "Numpy"
    catalog = "Math"

    def create_properties(self):
        self.properties.new(
            "Enum",
            "function",
            default="add",
            options=func_items,
            update=self.create_sockets,
        )

    def create_sockets(self):
        self.inputs.clear()
        self.outputs.clear()
        if self.properties["function"].value in ["linspace"]:
            self.inputs.new("Float", "start")
            self.inputs.new("Float", "stop")
            self.inputs.new("Int", "num")
            self.args = ["start", "stop"]
            self.kwargs = ["num"]
        elif self.properties["function"].value in ["arange"]:
            self.inputs.new("Float", "start")
            self.inputs.new("Float", "stop")
            self.inputs.new("Int", "step")
            self.args = ["start", "stop"]
            self.kwargs = ["step"]
        elif self.properties["function"].value in ["cos", "sin"]:
            self.inputs.new("Float", "x")
            self.args = ["x"]
            self.kwargs = []
        elif self.properties["function"].value in []:
            self.inputs.new("Float", "x")
            self.inputs.new("Float", "y")
            self.args = ["x", "y"]
            self.kwargs = []
        elif self.properties["function"].value in ["argmax", "argmin"]:
            self.inputs.new("General", "a")
            self.inputs.new("Int", "axis")
            self.args = ["a"]
            self.kwargs = ["axis"]
        elif self.properties["function"].value in ["ones", "zeros"]:
            self.inputs.new("General", "shape")
            self.args = ["shape"]
            self.kwargs = []
        elif self.properties["function"].value in [
            "multiply",
            "divide",
            "power",
            "substract",
            "mod",
            "greater",
            "less",
            "add",
        ]:
            self.inputs.new("General", "x1")
            self.inputs.new("General", "x2")
            self.args = ["x1", "x2"]
            self.kwargs = []
        else:
            self.inputs.new("General", "x")
            self.args = ["x"]
            self.kwargs = []
        self.outputs.new("General", "result")

    def get_executor(self):
        return {
            "path": "numpy",
            "name": self.properties["function"].value,
            "type": "function",
        }


node_list = [
    ScinodeNumpy,
]
