"""add_session

Revision ID: 902a51ac4032
Revises: de6827ead8fe
Create Date: 2023-06-28 14:44:16.544879

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy import select
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session

# revision identifiers, used by Alembic.
revision = "902a51ac4032"
down_revision = "de6827ead8fe"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    Base = automap_base()
    Base.prepare(autoload_with=op.get_bind())
    MessageRecord = Base.classes.nonebot_plugin_chatrecorder_messagerecord
    SessionModel = Base.classes.nonebot_plugin_session_sessionmodel
    with Session(op.get_bind()) as session:
        statement = select(MessageRecord)
        messages = session.scalars(statement).all()

        for message in messages:
            bot_id = message.bot_id
            bot_type = message.bot_type
            platform = message.platform
            level = "LEVEL0"
            if message.detail_type == "private":
                level = "LEVEL1"
            elif message.detail_type == "group":
                level = "LEVEL2"
            elif message.detail_type == "channel":
                level = "LEVEL3"
            id1 = message.user_id
            id2 = message.group_id or message.channel_id
            id3 = message.guild_id

            statement = (
                select(SessionModel)
                .where(SessionModel.bot_id == bot_id)
                .where(SessionModel.bot_type == bot_type)
                .where(SessionModel.platform == platform)
                .where(SessionModel.level == level)
                .where(SessionModel.id1 == id1)
                .where(SessionModel.id2 == id2)
                .where(SessionModel.id3 == id3)
            )
            if not (model := session.scalars(statement).one_or_none()):
                model = SessionModel(
                    bot_id=bot_id,
                    bot_type=bot_type,
                    platform=platform,
                    level=level,
                    id1=id1,
                    id2=id2,
                    id3=id3,
                )
                session.add(model)
                session.commit()
                session.refresh(model)

            message.session_id = model.id
            session.add(message)
            session.commit()

    with op.batch_alter_table(
        "nonebot_plugin_chatrecorder_messagerecord", schema=None
    ) as batch_op:
        batch_op.alter_column("session_id", existing_type=sa.Integer(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "nonebot_plugin_chatrecorder_messagerecord", schema=None
    ) as batch_op:
        batch_op.alter_column("session_id", existing_type=sa.Integer(), nullable=True)

    # ### end Alembic commands ###
