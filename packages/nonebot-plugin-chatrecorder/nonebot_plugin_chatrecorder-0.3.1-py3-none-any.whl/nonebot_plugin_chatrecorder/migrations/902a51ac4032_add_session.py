"""add_session

Revision ID: 902a51ac4032
Revises: de6827ead8fe
Create Date: 2023-06-28 14:44:16.544879

"""
import sqlalchemy as sa
from alembic import op
from nonebot.log import logger
from sqlalchemy import insert, select, update
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session

# revision identifiers, used by Alembic.
revision = "902a51ac4032"
down_revision = "de6827ead8fe"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    Base = automap_base()
    Base.prepare(autoload_with=op.get_bind())
    MessageRecord = Base.classes.nonebot_plugin_chatrecorder_messagerecord
    SessionModel = Base.classes.nonebot_plugin_session_sessionmodel
    with Session(op.get_bind()) as session:
        logger.warning("正在迁移聊天记录数据，请不要关闭程序...")

        statement = select(MessageRecord)
        messages = session.scalars(statement).all()

        bulk_insert_sessions = {}
        message_id_session_key_map = {}
        for message in messages:
            bot_id = message.bot_id
            bot_type = message.bot_type
            platform = message.platform
            level = "LEVEL0"
            if message.detail_type == "private":
                level = "LEVEL1"
            elif message.detail_type == "group":
                level = "LEVEL2"
            elif message.detail_type == "channel":
                level = "LEVEL3"
            id1 = message.user_id
            id2 = message.group_id or message.channel_id
            id3 = message.guild_id

            session_key = (bot_id, bot_type, platform, level, id1, id2, id3)
            # 保存 message id 和 session key 的对应关系
            message_id_session_key_map[message.id] = session_key
            if session_key not in bulk_insert_sessions:
                bulk_insert_sessions[session_key] = {
                    "bot_id": bot_id,
                    "bot_type": bot_type,
                    "platform": platform,
                    "level": level,
                    "id1": id1,
                    "id2": id2,
                    "id3": id3,
                }

        session_key_id_map = {}
        if bulk_insert_sessions:
            # 读取已经存在的 session
            for session_obj in session.scalars(select(SessionModel)).all():
                session_key = (
                    session_obj.bot_id,
                    session_obj.bot_type,
                    session_obj.platform,
                    session_obj.level,
                    session_obj.id1,
                    session_obj.id2,
                    session_obj.id3,
                )
                session_key_id_map[session_key] = session_obj.id

            # 更新新插入的 session
            for session_obj in session.scalars(
                insert(SessionModel).returning(SessionModel),
                [
                    session_dict
                    for key, session_dict in bulk_insert_sessions.items()
                    if key not in session_key_id_map  # 去重
                ],
            ).all():
                session_key = (
                    session_obj.bot_id,
                    session_obj.bot_type,
                    session_obj.platform,
                    session_obj.level,
                    session_obj.id1,
                    session_obj.id2,
                    session_obj.id3,
                )
                session_key_id_map[session_key] = session_obj.id

        # 更新 message 的 session id
        bulk_update_messages = []
        for message_id, session_key in message_id_session_key_map.items():
            bulk_update_messages.append(
                {
                    "id": message_id,
                    "session_id": session_key_id_map[session_key],
                }
            )
        if bulk_update_messages:
            session.execute(update(MessageRecord), bulk_update_messages)
        logger.warning("聊天记录数据迁移完成！")

    with op.batch_alter_table(
        "nonebot_plugin_chatrecorder_messagerecord", schema=None
    ) as batch_op:
        batch_op.alter_column("session_id", existing_type=sa.Integer(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "nonebot_plugin_chatrecorder_messagerecord", schema=None
    ) as batch_op:
        batch_op.alter_column("session_id", existing_type=sa.Integer(), nullable=True)

    # ### end Alembic commands ###
