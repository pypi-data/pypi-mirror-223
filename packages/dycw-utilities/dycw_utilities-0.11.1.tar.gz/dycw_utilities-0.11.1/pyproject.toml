#### black ####################################################################
[tool.black]
skip-magic-trailing-comma = true
target-version = ["py39"]

#### coverage #################################################################
[tool.coverage.run]
branch = true
data_file = ".coverage/data"
parallel = true
omit = ["src/utilities/clean_dir/__main__.py"]
plugins = ["coverage_conditional_plugin"]

[tool.coverage.report]
exclude_lines = ["# pragma: no cover", "@overload"]
fail_under = 100.0
skip_covered = true
skip_empty = true

[tool.coverage.html]
directory = ".coverage/html"

[tool.coverage.coverage_conditional_plugin.omit]
'not is_installed("cvxpy")' = "src/utilities/cvxpy.py"

[tool.coverage.coverage_conditional_plugin.rules]
os-ne-windows = 'sys_platform != "windows"'
os-ne-macos = 'sys_platform != "darwin"'
os-ne-linux = 'sys_platform != "linux"'
version-le-310 = "sys_version_info <= (3, 10)"
version-ne-310 = "sys_version_info != (3, 10)"
version-ge-311 = "sys_version_info >= (3, 11)"

#### hatch ####################################################################
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/utilities"]

[tool.hatch.version]
path = "src/utilities/__init__.py"

#### nitpick ##################################################################
[tool.nitpick]
style = [
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/common.toml",
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/3.9.toml",
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/pip-compile-no-hashes.toml",
]

#### project ##################################################################
[project]
name = "dycw-utilities"
dynamic = ["version"]
readme = "README.md"
requires-python = ">= 3.9"
authors = [{ name = "Derek Wan", email = "d.wan@icloud.com" }]
dependencies = ["beartype >= 0.15.0", "typing-extensions >= 4.7.0"]

[project.optional-dependencies]
airium = ["airium >= 0.2.5"]
atomicwrites = ["atomicwrites >= 1.4.1"]
attrs = ["attrs >= 23.1.0"]
bidict = ["bidict >= 0.22.1"]
click = ["click >= 8.1.6"]
cryptography = ["cryptography >= 41.0.3"]
cvxpy = ["cvxpy >= 1.3.1; sys_platform == 'linux'"]
fastapi = ["fastapi >= 0.101.0"]
fastparquet = [
  "fastparquet >= 2023.7.0",
  "atomicwrites >= 1.4.1",  # atomicwrites
]
fpdf2 = [
  "fpdf2 >= 2.7.5",
  "atomicwrites >= 1.4.1",  # holoviews
  "holoviews >= 1.17.0",    # holoviews
  "selenium >= 4.9.0",      # holoviews
]
hatch = ["hatch >= 1.7.0"]
holoviews = [
  "holoviews >= 1.17.0",
  "selenium >= 4.9.0",
  "atomicwrites >= 1.4.1",  # atomicwrites
]
hypothesis = ["hypothesis >= 6.72.1"]
loguru = ["loguru >= 0.7.0"]
luigi = ["luigi >= 3.3.0"]
memory-profiler = ["memory-profiler >= 0.61.0"]
more-itertools = ["more-itertools >= 10.1.0"]
numpy = ["numpy >= 1.25.2"]
pandas = ["pandas >= 2.0.3"]
pqdm = ["pqdm >= 0.2.0"]
psutil = ["psutil >= 5.9.5"]
pyinstrument = [
  "pyinstrument >= 4.5.1",
  "atomicwrites >= 1.4.1",  # atomicwrites
]
pypi = [
  "pypiserver[passlib] >= 1.5.2",
  "loguru >= 0.7.0",                  # loguru
  "typed-settings[click] >= 23.0.0",  # typed-settings
]
pytest = [
  "pytest >= 7.4.0",
  "atomicwrites >= 1.4.1",  # atomicwrites
]
pytest-check = ["pytest-check >= 2.2.0"]
scipy = ["scipy >= 1.11.1"]
scripts = [
  "loguru >= 0.7.0",                  # loguru
  "typed-settings[click] >= 23.0.0",  # typed-settings
]
semver = ["semver >= 3.0.0"]
sqlalchemy = [
  "sqlalchemy >= 2.0.10",
  "timeout-decorator >= 0.5.0",
  "bidict >= 0.22.1",          # bidict
  "more-itertools >= 10.1.0",  # more-itertools
]
tqdm = ["tqdm >= 4.65.0"]
typed-settings = ["typed-settings[click] >= 23.0.0"]
xarray = [
  "bottleneck >= 1.3.7",
  "xarray >= 2023.4.2",
]
zarr = [
  "zarr >= 2.14.2",
  "atomicwrites >= 1.4.1",  # atomicwrites
]
# groups
test = [
  "exceptiongroup >= 1.1.2",
  "pytest-cov >= 4.1.0",
  "pytest-instafail >= 0.5.0",
  "pytest-randomly >= 3.13.0",
  "pytest-rerunfailures >= 12.0",
  "pytest-xdist >= 3.3.1",
  "hypothesis >= 6.72.1",          # hypothesis
  "pytest >= 7.4.0",               # pytest
  "pytest-check >= 2.2.0",         # pytest-check
  "atomicwrites >= 1.4.1",         # pytest
]
# dev
dev = [
  # core
  "airium >= 0.2.5",                          # airium
  "atomicwrites >= 1.4.1",                    # atomicwrites
  "attrs >= 23.1.0",                          # attrs
  "bidict >= 0.22.1",                         # bidict
  "bottleneck >= 1.3.7",                      # xarray
  "click >= 8.1.6",                           # click
  "cryptography >= 41.0.3",                   # cryptography
  "cvxpy >= 1.3.1; sys_platform == 'linux'",  # cvxpy
  "fastapi >= 0.101.0",                       # fastapi
  "fastparquet >= 2023.7.0",                  # fastparquet
  "fpdf2 >= 2.7.5",                           # fpdf2
  "hatch >= 1.7.0",                           # hatch
  "holoviews >= 1.17.0",                      # holoviews
  "hypothesis >= 6.72.1",                     # hypothesis
  "loguru >= 0.7.0",                          # loguru
  "luigi >= 3.3.0",                           # luigi
  "memory-profiler >= 0.61.0",                # memory-profiler
  "more-itertools >= 10.1.0",                 # more-itertools
  "numpy >= 1.25.2",                          # numpy
  "pandas >= 2.0.3",                          # pandas
  "pqdm >= 0.2.0",                            # pqdm
  "psutil >= 5.9.5",                          # psutil
  "pyinstrument >= 4.5.1",                    # pyinstrument
  "pypiserver[passlib] >= 1.5.2",             # pypi
  "pytest >= 7.4.0",                          # pytest
  "pytest-check >= 2.2.0",                    # pytest-check
  "scipy >= 1.11.1",                          # scipy
  "selenium >= 4.9.0",                        # holoviews
  "semver >= 3.0.0",                          # semver
  "sqlalchemy >= 2.0.10",                     # sqlalchemy
  "timeout-decorator >= 0.5.0",               # sqlalchemy
  "tqdm >= 4.65.0",                           # tqdm
  "typed-settings[click] >= 23.0.0",          # typed-settings
  "xarray >= 2023.4.2",                       # xarray
  "zarr >= 2.14.2",                           # zarr
  # test
  "exceptiongroup >= 1.1.2",       # test
  "pytest-cov >= 4.1.0",           # test
  "pytest-instafail >= 0.5.0",     # test
  "pytest-randomly >= 3.13.0",     # test
  "pytest-rerunfailures >= 12.0",  # test
  "pytest-xdist >= 3.3.1",         # test
  # dev
  "black",
  "coverage-conditional-plugin",
  "cx_oracle",
  "freezegun",
  "hatch",
  "hypothesis-sqlalchemy",
  "mysqlclient; sys_platform == 'linux'",
  "nox",
  "pip-tools",
  "psycopg2-binary; sys_platform == 'linux'",
  "pyodbc; sys_platform == 'linux'",
  "ruff",
]

[project.scripts]
clean-dir = "utilities.clean_dir:main"
monitor-memory = "utilities.monitor_memory:main"
start-luigi-server = "utilities.luigi.server:main"
start-pypi-server = "utilities.pypi_server:main"

#### pyright ##################################################################
[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__", ".direnv", ".git", ".venv"]
pythonVersion = "3.9"
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportIncompatibleMethodOverride = false
reportMissingTypeArgument = false
reportPrivateUsage = false
reportPrivateImportUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedBaseClass = false
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

#### pytest ###################################################################
[tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--cov=utilities",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--strict-markers",
  "--tb=native",
]
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore::beartype.roar.BeartypeDecorHintPep585DeprecationWarning",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
  "ignore:unclosed file <.*>:ResourceWarning",
]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true

#### ruff #####################################################################
[tool.ruff]
ignore = [
  "ANN101", # flake8-annotations, missing-type-self
  "ANN102", # flake8-annotations, missing-type-cls
  "ANN401", # flake8-annotations, dynamically-typed-expression
  "B008",  # flake8-bugbear, function-call-argument-default
  "COM812",  # flake8-commas, trailing-comma-missing
  "D", # pydocstyle
  "FA100", # flake8-future-annotations, future-rewritable-type-annotation
  "PD", # pandas-vet
  "PLR0913", # refactor, too-many-arguments
  "PT012", # flake8-pytest-style, raises-with-multiple-statements
  "PT013", # flake8-pytest-style, incorrect-pytest-import
  "TCH001", # flake8-type-checking, typing-only-first-party-import
  "TCH002", # flake8-type-checking, typing-only-third-party-import
  "TCH003", # flake8-type-checking, typing-only-standard-library-import
  "TRY200", # tryceratops, reraise-no-cause
  "TRY301", # tryceratops, raise-within-try

]
select = ["ALL"]
src = ["src", "tests"]
target-version = "py39"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"src/tests/**/*.py" = [
  "FBT001", # flake8-boolean-trap, boolean-positional-arg-in-function-definition
  "FBT003", # flake8-boolean-trap, boolean-positional-value-in-function-call
  "PLR2004", # refactor, magic-value-comparison
  "S101", # flake8-bandit, assert-used

]
