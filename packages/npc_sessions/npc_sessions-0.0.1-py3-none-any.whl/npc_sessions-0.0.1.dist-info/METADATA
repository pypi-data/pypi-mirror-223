Metadata-Version: 2.1
Name: npc-sessions
Version: 0.0.1
Summary: Tools and interfaces for working with behavior and epyhys sessions from the Mindscope Neuropixels team, in the cloud.
Author-email: Ben Hardcastle <ben.hardcastle@alleninstitute.org>
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions >=4.7.1
Requires-Dist: pyyaml >=6.0.1
Requires-Dist: npc-session >=0.1.1
Requires-Dist: types-PyYAML >=6.0.12.11
Provides-Extra: dev
Requires-Dist: universal-pathlib >=0.0.23 ; extra == 'dev'
Requires-Dist: pandas[aws,excel,fss,hdf5,performance,plot] >=2.0.3 ; extra == 'dev'
Requires-Dist: pyarrow >=12.0.1 ; extra == 'dev'
Requires-Dist: pydantic >=2.0.3 ; extra == 'dev'
Requires-Dist: s3fs >=2023.6.0 ; extra == 'dev'
Requires-Dist: aiopath >=0.5.12 ; extra == 'dev'
Requires-Dist: aiofiles >=23.1.0 ; extra == 'dev'
Requires-Dist: httpx >=0.24.1 ; extra == 'dev'
Requires-Dist: pydbhub >=0.0.4 ; extra == 'dev'
Requires-Dist: requests >=2.31.0 ; extra == 'dev'
Requires-Dist: pytest >=7.4.0 ; extra == 'dev'
Requires-Dist: coverage[toml] >=7.2.7 ; extra == 'dev'
Requires-Dist: ruff >=0.0.282 ; extra == 'dev'
Requires-Dist: pytest-cov >=4.1.0 ; extra == 'dev'
Requires-Dist: pdm-bump >=0.7.3 ; extra == 'dev'
Requires-Dist: types-PyYAML >=6.0.12.11 ; extra == 'dev'
Requires-Dist: mypy >=1.4.1 ; extra == 'dev'

# npc_sessions
**n**euro**p**ixels **c**loud **sessions**

Tools and interfaces for working with behavior and epyhys sessions from the
Mindscope Neuropixels team, in the cloud.

## quickstart

```bash
pip install npc_sessions
```

Get some minimal info on all the tracked sessions available to work with:
```python
>>> from npc_sessions import tracked as tracked_sessions;

# each record in the sequence has info about one session:
>>> tracked_sessions[0]._fields
('session', 'subject', 'date', 'idx', 'project', 'is_ephys', 'is_sync')
>>> tracked_sessions[0].is_ephys
True
>>> all(s.date.year >= 2022 for s in tracked_sessions)
True

```
