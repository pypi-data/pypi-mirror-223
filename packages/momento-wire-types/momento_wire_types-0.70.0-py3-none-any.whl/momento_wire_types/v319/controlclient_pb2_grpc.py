# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import controlclient_pb2 as controlclient__pb2


class ScsControlStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCache = channel.unary_unary(
                '/control_client.ScsControl/CreateCache',
                request_serializer=controlclient__pb2._CreateCacheRequest.SerializeToString,
                response_deserializer=controlclient__pb2._CreateCacheResponse.FromString,
                )
        self.DeleteCache = channel.unary_unary(
                '/control_client.ScsControl/DeleteCache',
                request_serializer=controlclient__pb2._DeleteCacheRequest.SerializeToString,
                response_deserializer=controlclient__pb2._DeleteCacheResponse.FromString,
                )
        self.ListCaches = channel.unary_unary(
                '/control_client.ScsControl/ListCaches',
                request_serializer=controlclient__pb2._ListCachesRequest.SerializeToString,
                response_deserializer=controlclient__pb2._ListCachesResponse.FromString,
                )
        self.FlushCache = channel.unary_unary(
                '/control_client.ScsControl/FlushCache',
                request_serializer=controlclient__pb2._FlushCacheRequest.SerializeToString,
                response_deserializer=controlclient__pb2._FlushCacheResponse.FromString,
                )
        self.CreateSigningKey = channel.unary_unary(
                '/control_client.ScsControl/CreateSigningKey',
                request_serializer=controlclient__pb2._CreateSigningKeyRequest.SerializeToString,
                response_deserializer=controlclient__pb2._CreateSigningKeyResponse.FromString,
                )
        self.RevokeSigningKey = channel.unary_unary(
                '/control_client.ScsControl/RevokeSigningKey',
                request_serializer=controlclient__pb2._RevokeSigningKeyRequest.SerializeToString,
                response_deserializer=controlclient__pb2._RevokeSigningKeyResponse.FromString,
                )
        self.ListSigningKeys = channel.unary_unary(
                '/control_client.ScsControl/ListSigningKeys',
                request_serializer=controlclient__pb2._ListSigningKeysRequest.SerializeToString,
                response_deserializer=controlclient__pb2._ListSigningKeysResponse.FromString,
                )


class ScsControlServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCaches(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FlushCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSigningKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeSigningKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSigningKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScsControlServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCache': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCache,
                    request_deserializer=controlclient__pb2._CreateCacheRequest.FromString,
                    response_serializer=controlclient__pb2._CreateCacheResponse.SerializeToString,
            ),
            'DeleteCache': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCache,
                    request_deserializer=controlclient__pb2._DeleteCacheRequest.FromString,
                    response_serializer=controlclient__pb2._DeleteCacheResponse.SerializeToString,
            ),
            'ListCaches': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCaches,
                    request_deserializer=controlclient__pb2._ListCachesRequest.FromString,
                    response_serializer=controlclient__pb2._ListCachesResponse.SerializeToString,
            ),
            'FlushCache': grpc.unary_unary_rpc_method_handler(
                    servicer.FlushCache,
                    request_deserializer=controlclient__pb2._FlushCacheRequest.FromString,
                    response_serializer=controlclient__pb2._FlushCacheResponse.SerializeToString,
            ),
            'CreateSigningKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSigningKey,
                    request_deserializer=controlclient__pb2._CreateSigningKeyRequest.FromString,
                    response_serializer=controlclient__pb2._CreateSigningKeyResponse.SerializeToString,
            ),
            'RevokeSigningKey': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeSigningKey,
                    request_deserializer=controlclient__pb2._RevokeSigningKeyRequest.FromString,
                    response_serializer=controlclient__pb2._RevokeSigningKeyResponse.SerializeToString,
            ),
            'ListSigningKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSigningKeys,
                    request_deserializer=controlclient__pb2._ListSigningKeysRequest.FromString,
                    response_serializer=controlclient__pb2._ListSigningKeysResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'control_client.ScsControl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ScsControl(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/CreateCache',
            controlclient__pb2._CreateCacheRequest.SerializeToString,
            controlclient__pb2._CreateCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/DeleteCache',
            controlclient__pb2._DeleteCacheRequest.SerializeToString,
            controlclient__pb2._DeleteCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCaches(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/ListCaches',
            controlclient__pb2._ListCachesRequest.SerializeToString,
            controlclient__pb2._ListCachesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FlushCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/FlushCache',
            controlclient__pb2._FlushCacheRequest.SerializeToString,
            controlclient__pb2._FlushCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSigningKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/CreateSigningKey',
            controlclient__pb2._CreateSigningKeyRequest.SerializeToString,
            controlclient__pb2._CreateSigningKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeSigningKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/RevokeSigningKey',
            controlclient__pb2._RevokeSigningKeyRequest.SerializeToString,
            controlclient__pb2._RevokeSigningKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSigningKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/control_client.ScsControl/ListSigningKeys',
            controlclient__pb2._ListSigningKeysRequest.SerializeToString,
            controlclient__pb2._ListSigningKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
