# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ......core.datetime_utils import serialize_datetime
from .....credentialing.types.encounter_credentialing_status_result import EncounterCredentialingStatusResult
from .attributable_contracting_status_result import AttributableContractingStatusResult
from .network_status import NetworkStatus


class NetworkStatusComputationResults(pydantic.BaseModel):
    contracting_status_result: AttributableContractingStatusResult
    credentialing_status_result: EncounterCredentialingStatusResult
    network_status: NetworkStatus

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
