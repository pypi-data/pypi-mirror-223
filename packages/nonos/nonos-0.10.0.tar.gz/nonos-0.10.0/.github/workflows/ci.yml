name: CI
on:
  push:
    branches:
    - main
  pull_request:
    paths-ignore:
    - README.md

  schedule:
    # run this once a week (wednesday) at 3 am UTC
  - cron: 0 3 * * 3
  workflow_dispatch:



jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version: ['3.11']
        include:
        - os: ubuntu-20.04
          python-version: '3.8'
          pip-args: --constraint constraints/minimal_dependencies.txt

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build
      run: |
        python -m pip install --upgrade pip
        python -m pip install . ${{ matrix.pip-args }}
        python -m pip install --requirement requirements/tests.txt

    - name: Run pytest
      run: |
        python -m pip freeze
        pytest --color=yes


  type-check:
    strategy:
      matrix:
        python-version:
        - '3.8'
        - '3.11'

    runs-on: ubuntu-latest
    name: type-checking

    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install --requirement requirements/typecheck.txt

    - name: Run mypy
      run: mypy nonos

  image-tests:
    name: Image tests
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - uses: actions/checkout@v3

    - name: Build
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install --requirement requirements/tests.txt

    - name: Run Image Tests
      run: |
        python -m pip freeze
        pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-summary=html \
               --mpl-results-path=nonos_pytest_mpl_results \
               --mpl-baseline-path=tests/pytest_mpl_baseline

    - name: Generate new image baseline
      if: failure()
      run: |
        pytest --color=yes --mpl -m mpl_image_compare \
               --mpl-generate-path=nonos_pytest_mpl_new_baseline \
               --last-failed

    # always attempt to upload artifacts, even
    # (and especially) in case of failure.
    - name: Upload pytest-mpl report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: nonos_pytest_mpl_results
        path: nonos_pytest_mpl_results/*

    - name: Upload pytest-mpl baseline
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: nonos_pytest_mpl_new_baseline
        path: nonos_pytest_mpl_new_baseline/*
        if-no-files-found: ignore
