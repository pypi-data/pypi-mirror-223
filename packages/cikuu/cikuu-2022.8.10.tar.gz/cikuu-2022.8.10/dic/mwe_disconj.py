mwe_disconj = {
"above",
"above all",
"accordingly",
"actually",
"additionally",
"admittedly",
"after",
"after a time",
"after all",
"afterwards",
"again",
"albeit",
"all in all",
"all the same",
"also",
"alternatively",
"although",
"altogether",
"and also",
"and another thing",
"another",
"anyhow",
"apart from",
"apparently",
"arising out of",
"as a consequence",
"as a matter of fact",
"as a result",
"as a result of",
"as against",
"as an example",
"as far as",
"as if",
"as long as",
"as soon as",
"as such",
"as well",
"as well as",
"at first",
"at first sight",
"at last",
"at least",
"at once",
"at present",
"at the same time",
"at this point",
"basically",
"because",
"because of",
"before",
"below",
"besides",
"both",
"briefly",
"broadly",
"but",
"but also",
"by contrast",
"by reason of",
"by the way",
"certainly",
"clearly",
"consequently",
"considering",
"considering that",
"conversely",
"correspondingly",
"cos",
"currently",
"despite",
"e.g.",
"each",
"earlier",
"EG",
"especially",
"even if",
"even though",
"eventually",
"fifth",
"fifthly",
"finally",
"first",
"first of all",
"firstly",
"five",
"following",
"for example",
"for fear that",
"for instance",
"for this purpose",
"for this reason",
"former",
"formerly",
"fortunately",
"four",
"fourth",
"fourthly",
"from now on",
"from this that",
"further",
"furthermore",
"generally",
"given",
"hence",
"henceforward",
"here",
"heretofore",
"hereupon",
"hitherto",
"however",
"however that may be",
"I mean",
"i.e.",
"ideally",
"ie",
"if",
"in a sense",
"in accordance with",
"in addition",
"in addition to",
"in any case",
"in any event",
"in any way",
"in brief",
"in case of",
"in comparison",
"in conclusion",
"in consequence",
"in contrast",
"in contrast to",
"in effect",
"in either case",
"in essence",
"in fact",
"in general",
"in my humble opinion",
"in my opinion",
"in order that",
"in order to",
"in other words",
"in part",
"in particular",
"in principle",
"in short",
"in spite of",
"in such an event",
"in such cases",
"in summary",
"in that",
"in that case",
"in the case of",
"in the end",
"in the event of",
"in the event that",
"in the first place",
"in the same way",
"in this case",
"in this way",
"in turn",
"incidentally",
"increasingly",
"indeed",
"initially",
"instead",
"instead of",
"interestingly",
"it follows",
"last",
"lastly",
"later",
"later on",
"latter",
"lest",
"like",
"likewise",
"meanwhile",
"moreover",
"namely",
"neither",
"nevertheless",
"next",
"next time",
"nonetheless",
"nor",
"normally",
"not .. either",
"not only",
"notwithstanding",
"now that",
"nowadays",
"obviously",
"occasionally",
"of course",
"often",
"on account of",
"on the basis of",
"on the contrary",
"on the one hand",
"on the other hand",
"on the whole",
"on this basis",
"once",
"once again",
"ordinarily",
"other",
"particularly",
"perhaps",
"preceding",
"presently",
"previous",
"previously",
"provided that",
"providing that",
"rather",
"rather than",
"recently",
"same",
"second",
"secondly",
"several",
"similar",
"similarly",
"simultaneously",
"since",
"so",
"so as to",
"so that",
"soon",
"specifically",
"still",
"strictly speaking",
"subsequent",
"subsequently",
"such",
"such as",
"such being the case",
"that being the case",
"that is",
"that is to say",
"that is why",
"the last time",
"then",
"thereby",
"therefore",
"these",
"third",
"thirdly",
"this time",
"those",
"though",
"three",
"thus",
"till",
"to conclude",
"to date",
"to put it another way",
"to recap",
"to some extent",
"to sum up",
"to summarize",
"to tell the truth",
"to this end",
"typically",
"under the circumstances",
"under those circumstances",
"unfortunately",
"unless",
"until",
"until then",
"up to now",
"Viz",
"viz.",
"what 's more",
"when",
"whenever",
"where",
"whereas",
"whereby",
"wherever",
"whether",
"which",
"while",
"whilst",
"who",
"whose",
"why",
"with a view to",
"with this in mind",
"without",
"yet",
}

def save():
	import redis
	r = redis.Redis(host='dev.werror.com', port=4328)
	for w in mwe_disconj: 
		r.sadd("__dic:mwe_disconj", w )
	print(">> finished loading mwe_disconj")

if __name__ == '__main__':
	import redis
	r = redis.Redis('files.jukuu.com', port=6666, decode_responses=True)
	[r.sadd(f'dict:wordlist:mwe_disconj',s) for s in mwe_disconj] 