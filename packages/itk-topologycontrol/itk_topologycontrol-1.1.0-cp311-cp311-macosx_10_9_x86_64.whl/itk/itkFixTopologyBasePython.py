# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TopologyControlPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFixTopologyBasePython
else:
    import _itkFixTopologyBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFixTopologyBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFixTopologyBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImagePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.ITKCommonBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
class itkFixTopologyBaseISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkFixTopologyBaseISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMaskImage = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_GetMaskImage)
    SetRadius = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_GetRadius)
    SetInsideValue = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_GetInsideValue)
    SameDimensionCheck = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_SameDimensionCheck
    
    SameTypeCheck = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_SameTypeCheck
    
    InputAdditiveOperatorsCheck = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_InputAdditiveOperatorsCheck
    
    InputConvertibleToIntCheck = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_InputConvertibleToIntCheck
    
    IntConvertibleToInputCheck = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_IntConvertibleToInputCheck
    
    InputIntComparableCheck = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_InputIntComparableCheck
    
    __swig_destroy__ = _itkFixTopologyBasePython.delete_itkFixTopologyBaseISS3
    cast = _swig_new_static_method(_itkFixTopologyBasePython.itkFixTopologyBaseISS3_cast)

# Register itkFixTopologyBaseISS3 in _itkFixTopologyBasePython:
_itkFixTopologyBasePython.itkFixTopologyBaseISS3_swigregister(itkFixTopologyBaseISS3)
itkFixTopologyBaseISS3_cast = _itkFixTopologyBasePython.itkFixTopologyBaseISS3_cast

class itkFixTopologyBaseIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkFixTopologyBaseIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMaskImage = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_GetMaskImage)
    SetRadius = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_GetRadius)
    SetInsideValue = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_GetInsideValue)
    SameDimensionCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_SameDimensionCheck
    
    SameTypeCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_SameTypeCheck
    
    InputAdditiveOperatorsCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_InputAdditiveOperatorsCheck
    
    InputConvertibleToIntCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_InputConvertibleToIntCheck
    
    IntConvertibleToInputCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_IntConvertibleToInputCheck
    
    InputIntComparableCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_InputIntComparableCheck
    
    __swig_destroy__ = _itkFixTopologyBasePython.delete_itkFixTopologyBaseIUC3
    cast = _swig_new_static_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_cast)

# Register itkFixTopologyBaseIUC3 in _itkFixTopologyBasePython:
_itkFixTopologyBasePython.itkFixTopologyBaseIUC3_swigregister(itkFixTopologyBaseIUC3)
itkFixTopologyBaseIUC3_cast = _itkFixTopologyBasePython.itkFixTopologyBaseIUC3_cast

class itkFixTopologyBaseIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkFixTopologyBaseIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMaskImage = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_GetMaskImage)
    SetRadius = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_SetRadius)
    GetRadius = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_GetRadius)
    SetInsideValue = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_SetInsideValue)
    GetInsideValue = _swig_new_instance_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_GetInsideValue)
    SameDimensionCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_SameDimensionCheck
    
    SameTypeCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_SameTypeCheck
    
    InputAdditiveOperatorsCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_InputAdditiveOperatorsCheck
    
    InputConvertibleToIntCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_InputConvertibleToIntCheck
    
    IntConvertibleToInputCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_IntConvertibleToInputCheck
    
    InputIntComparableCheck = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_InputIntComparableCheck
    
    __swig_destroy__ = _itkFixTopologyBasePython.delete_itkFixTopologyBaseIUS3
    cast = _swig_new_static_method(_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_cast)

# Register itkFixTopologyBaseIUS3 in _itkFixTopologyBasePython:
_itkFixTopologyBasePython.itkFixTopologyBaseIUS3_swigregister(itkFixTopologyBaseIUS3)
itkFixTopologyBaseIUS3_cast = _itkFixTopologyBasePython.itkFixTopologyBaseIUS3_cast



