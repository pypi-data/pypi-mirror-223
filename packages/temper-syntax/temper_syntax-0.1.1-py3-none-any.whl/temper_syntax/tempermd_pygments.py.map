{ "version": 3, "file": "OUTPUT_ROOT/temper-syntax/py/temper_syntax/tempermd_pygments.py", "sources": [ "-work/temper-syntax/tempermd-pygments.temper.md" ], "sourcesContent": [ "# Temper Markdown Pygments Lexer Info\n\nThere's less to do here than for the core Temper lexer, but keeping core\nmetadata central to the Temper Syntax library is still nice.\n\n    export class TemperMdLexer {\n      public name: String = \u0022TemperMarkdown\u0022;\n      public aliases: List\u003cString\u003e = [\u0022temper.md\u0022, \u0022tempermd\u0022];\n      public filenames: List\u003cString\u003e = [\u0022*.temper.md\u0022, \u0022*.tempermd\u0022];\n\n      public tokens: Map\u003cString, List\u003cRuleOption\u003e\u003e = new Map([\n        new Pair(\u0022root\u0022, [\n\nTo find indentation, use relatively simple 4 spaces from start for now. I don't\nthink Pygment's MarkdownLexer even recognizing indented code blocks at all right\nnow, so we get it to ourselves.\n\nTODO Recognize indentation relative to previous, such as outlines.\n\n          new Rule(raw\u0022^\\s*\\n {4}\u0022, Whitespace, \u0022indented\u0022),\n          inherit,\n        ].as\u003cList\u003cRuleOption\u003e\u003e()),\n\n        new Pair(\u0022indented\u0022, [\n          new Rule(\n\nThis seems to recognize the end of indented sections ok for the moment, limited\nto 4-space indentation from line start for now.\n\n            raw\u0022(?s)(.*?)(?=\\Z|\\n(?: {1,3}[^ ]|[^ ]|\u0024))\u0022,\n            bygroups([using(\u0022Temper\u0022)]),\n            \u0022#pop\u0022,\n          ),\n        ].as\u003cList\u003cRuleOption\u003e\u003e()),\n      ]);\n    }\n\n    let { ... } = import(\u0022./pygments\u0022);\n" ], "names": [ "TemperObject", "cast_by_type", "Pair", "Pair#255", "map_constructor", "map_constructor#256", "Tuple", "Any", "tuple", "RuleOption", "Rule", "Using", "ByGroups", "Whitespace", "Kind", "inherit", "Inherit", "bygroups", "TokenKind", "using", "Include", "include", "CommentMultiline", "CommentSingleline", "Keyword", "KeywordConstant", "KeywordDeclaration", "Name", "NameBuiltin", "NameDecorator", "Number", "Operator", "Punctuation", "StringKind", "StringInterpol", "TemperMdLexer", "name", "aliases", "filenames", "tokens", "constructor", "this", "return", "t#118", "t#120", "t#121", "t#122", "t#123", "t#124", "t#125", "t#83", "t#88" ], "mappings": "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" }