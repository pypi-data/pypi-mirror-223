name: Python Package

on:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Wheel

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
     
      - name: Install Python packages
        run: python -m pip install --upgrade build pip

      - name: build sdist
        run: PYTHONWARNINGS=error python -m build
      
      - name: Store the packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist

  test:
    needs:
      - build
      
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python.version }}
    strategy:
      fail-fast: false
      matrix:
        python:
          - {version: '3.8', wheel: 'cp38-cp38'}
          - {version: '3.9', wheel: 'cp39-cp39'}
          - {version: '3.10', wheel: 'cp310-cp310'}
          - {version: '3.11', wheel: 'cp311-cp311'}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: remove code outside of wheel
        run: rm -rf mercury_engine_data_structures
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}

      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
            
      - name: Install Python packages
        run: python -m pip install --upgrade pip pytest

      - name: install built wheel
        run: python -m pip install dist/*.whl
        shell: bash

      - name: test
        run: python -m pytest

  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - test

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish ðŸ“¦ to TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/

      - name: Create GitHub release
        uses: svenstaro/upload-release-action@2.7.0
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          body: "New release"

      - name: Publish ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_password }}

  full_test:
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Create venv
        run: python -m venv venv

      - name: Install Python packages
        run: venv/bin/python -m pip install --upgrade pip pytest pytest-cov pytest-xdist

      - name: install built wheel
        run: venv/bin/python -m pip install -e .

      - name: Run Tests
        run:
          venv/bin/python -m pytest --cov mercury_engine_data_structures --cov-report=xml --fail-if-missing --durations=100 -n 2

      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
