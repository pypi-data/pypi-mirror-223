# Code generated by Lark OpenAPI.

from .v1.resource import *
from .v2.resource import *


class CorehrService(object):
    def __init__(self, config: Config) -> None:
        self.v1: V1 = V1(config)
        self.v2: V2 = V2(config)


class V1(object):
    def __init__(self, config: Config) -> None:
        self.assigned_user: Optional[AssignedUser] = AssignedUser(config)
        self.company: Optional[Company] = Company(config)
        self.contract: Optional[Contract] = Contract(config)
        self.country_region: Optional[CountryRegion] = CountryRegion(config)
        self.currency: Optional[Currency] = Currency(config)
        self.custom_field: Optional[CustomField] = CustomField(config)
        self.department: Optional[Department] = Department(config)
        self.employee_type: Optional[EmployeeType] = EmployeeType(config)
        self.employment: Optional[Employment] = Employment(config)
        self.file: Optional[File] = File(config)
        self.job: Optional[Job] = Job(config)
        self.job_change: Optional[JobChange] = JobChange(config)
        self.job_data: Optional[JobData] = JobData(config)
        self.job_family: Optional[JobFamily] = JobFamily(config)
        self.job_level: Optional[JobLevel] = JobLevel(config)
        self.leave: Optional[Leave] = Leave(config)
        self.leave_granting_record: Optional[LeaveGrantingRecord] = LeaveGrantingRecord(config)
        self.location: Optional[Location] = Location(config)
        self.national_id_type: Optional[NationalIdType] = NationalIdType(config)
        self.offboarding: Optional[Offboarding] = Offboarding(config)
        self.org_role_authorization: Optional[OrgRoleAuthorization] = OrgRoleAuthorization(config)
        self.person: Optional[Person] = Person(config)
        self.pre_hire: Optional[PreHire] = PreHire(config)
        self.process_form_variable_data: Optional[ProcessFormVariableData] = ProcessFormVariableData(config)
        self.security_group: Optional[SecurityGroup] = SecurityGroup(config)
        self.subdivision: Optional[Subdivision] = Subdivision(config)
        self.subregion: Optional[Subregion] = Subregion(config)
        self.transfer_reason: Optional[TransferReason] = TransferReason(config)
        self.transfer_type: Optional[TransferType] = TransferType(config)
        self.working_hours_type: Optional[WorkingHoursType] = WorkingHoursType(config)


class V2(object):
    def __init__(self, config: Config) -> None:
        self.department: Optional[Department] = Department(config)
        self.employee: Optional[Employee] = Employee(config)
        self.job_change: Optional[JobChange] = JobChange(config)
        self.person: Optional[Person] = Person(config)
        self.pre_hire: Optional[PreHire] = PreHire(config)
