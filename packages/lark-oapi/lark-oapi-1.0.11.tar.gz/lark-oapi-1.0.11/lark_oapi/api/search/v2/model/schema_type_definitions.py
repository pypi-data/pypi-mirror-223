# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .schema_tag_options import SchemaTagOptions


class SchemaTypeDefinitions(object):
    _types = {
        "tag": List[SchemaTagOptions],
    }

    def __init__(self, d=None):
        self.tag: Optional[List[SchemaTagOptions]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SchemaTypeDefinitionsBuilder":
        return SchemaTypeDefinitionsBuilder()


class SchemaTypeDefinitionsBuilder(object):
    def __init__(self) -> None:
        self._schema_type_definitions = SchemaTypeDefinitions()

    def tag(self, tag: List[SchemaTagOptions]) -> "SchemaTypeDefinitionsBuilder":
        self._schema_type_definitions.tag = tag
        return self

    def build(self) -> "SchemaTypeDefinitions":
        return self._schema_type_definitions
