Metadata-Version: 2.1
Name: meddlr
Version: 0.0.9
Summary: Meddlr is a config-driven framework built to simplify ML-based medical image reconstruction and analysis.
Home-page: https://github.com/ad12/meddlr
Author: The Meddlr Team
Author-email: arjundd@stanford.edu
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyxb
Requires-Dist: h5py
Requires-Dist: matplotlib
Requires-Dist: numpy (<=1.23.5)
Requires-Dist: tensorboard
Requires-Dist: fvcore
Requires-Dist: mridata
Requires-Dist: scikit-image (>=0.18.2)
Requires-Dist: sigpy (>=0.1.17)
Requires-Dist: ismrmrd
Requires-Dist: pandas
Requires-Dist: silx
Requires-Dist: tqdm
Requires-Dist: omegaconf
Requires-Dist: torchmetrics (<=0.11.4,>=0.5.1)
Requires-Dist: iopath
Requires-Dist: packaging
Provides-Extra: all
Requires-Dist: medpy ; extra == 'all'
Requires-Dist: iocursor ; extra == 'all'
Requires-Dist: requests ; extra == 'all'
Requires-Dist: monai ; extra == 'all'
Requires-Dist: gdown (<4.6.0) ; extra == 'all'
Requires-Dist: lpips ; extra == 'all'
Provides-Extra: alldev
Requires-Dist: sphinx-rtd-theme ; extra == 'alldev'
Requires-Dist: flake8 ; extra == 'alldev'
Requires-Dist: monai ; extra == 'alldev'
Requires-Dist: pooch ; extra == 'alldev'
Requires-Dist: pytest ; extra == 'alldev'
Requires-Dist: medpy ; extra == 'alldev'
Requires-Dist: tifffile (<=2022.5.4) ; extra == 'alldev'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'alldev'
Requires-Dist: sphinx ; extra == 'alldev'
Requires-Dist: wrapt ; extra == 'alldev'
Requires-Dist: requests ; extra == 'alldev'
Requires-Dist: black (==22.12.0) ; extra == 'alldev'
Requires-Dist: parameterized ; extra == 'alldev'
Requires-Dist: flake8-comprehensions ; extra == 'alldev'
Requires-Dist: flake8-bugbear ; extra == 'alldev'
Requires-Dist: iocursor ; extra == 'alldev'
Requires-Dist: m2r2 ; extra == 'alldev'
Requires-Dist: sphinxcontrib.bibtex ; extra == 'alldev'
Requires-Dist: pre-commit (>=2.9.3) ; extra == 'alldev'
Requires-Dist: gdown (<4.6.0) ; extra == 'alldev'
Requires-Dist: coverage ; extra == 'alldev'
Requires-Dist: lpips ; extra == 'alldev'
Requires-Dist: isort ; extra == 'alldev'
Provides-Extra: benchmarking
Requires-Dist: medpy ; extra == 'benchmarking'
Provides-Extra: deployment
Requires-Dist: gdown (<4.6.0) ; extra == 'deployment'
Requires-Dist: requests ; extra == 'deployment'
Requires-Dist: iocursor ; extra == 'deployment'
Provides-Extra: dev
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: black (==22.12.0) ; extra == 'dev'
Requires-Dist: flake8-bugbear ; extra == 'dev'
Requires-Dist: flake8-comprehensions ; extra == 'dev'
Requires-Dist: pre-commit (>=2.9.3) ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: medpy ; extra == 'dev'
Requires-Dist: wrapt ; extra == 'dev'
Requires-Dist: pooch ; extra == 'dev'
Requires-Dist: gdown (<4.6.0) ; extra == 'dev'
Requires-Dist: parameterized ; extra == 'dev'
Requires-Dist: tifffile (<=2022.5.4) ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: sphinxcontrib-bibtex ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme ; extra == 'dev'
Requires-Dist: m2r2 ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinxcontrib.bibtex ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme ; extra == 'docs'
Requires-Dist: m2r2 ; extra == 'docs'
Provides-Extra: metrics
Requires-Dist: lpips ; extra == 'metrics'
Provides-Extra: modeling
Requires-Dist: monai ; extra == 'modeling'

# meddlr
![GitHub Workflow Status](https://img.shields.io/github/workflow/status/ad12/meddlr/CI)
![GitHub](https://img.shields.io/github/license/ad12/meddlr)
[![Documentation Status](https://readthedocs.org/projects/meddlr/badge/?version=latest)](https://meddlr.readthedocs.io/en/latest/?badge=latest)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)
[![codecov](https://codecov.io/gh/ad12/meddlr/branch/main/graph/badge.svg?token=U6H83UCGFU)](https://codecov.io/gh/ad12/meddlr)

[Getting Started](GETTING_STARTED.md)

Meddlr is a config-driven ML framework built to simplify medical image reconstruction and analysis problems.

## ‚ö° QuickStart
```bash
# Install Meddlr with basic dependencies
pip install meddlr

# Install Meddlr with all dependencies (e.g. pretrained models, benchmarking)
pip install 'meddlr[all]'
```

> _Installing locally_: For local development, fork and clone the repo and run `pip install -e ".[alldev]"`

> _Installing from main_: For most up-to-date code without a local install, run `pip install "meddlr @ git+https://github.com/ad12/meddlr@main"`

Configure your paths and get going!
```python
import meddlr as mr
import os

# (Optional) Configure and save machine/cluster preferences.
# This only has to be done once and will persist across sessions.
cluster = mr.Cluster()
cluster.set(results_dir="/path/to/save/results", data_dir="/path/to/datasets")
cluster.save()
# OR set these as environment variables.
os.environ["MEDDLR_RESULTS_DIR"] = "/path/to/save/results"
os.environ["MEDDLR_DATASETS_DIR"] = "/path/to/datasets"
```

Detailed instructions are available in [Getting Started](GETTING_STARTED.md).

## Visualizations
Use [MeddlrViz](https://github.com/ad12/meddlr-viz) to visualize your medical imaging datasets, ML models, and more!

```bash
pip install meddlr-viz
```

<div align="center">

<image src="https://github.com/ad12/meddlr-viz/blob/main/static/brats.gif" height=400 alt="A gallery of images from the BRATS dataset" />
</div>

## üêò Model Zoo
Easily serve and download pretrained models from the model zoo. A (evolving) list of pre-trained models can be found [here](MODEL_ZOO.md), on [HuggingFace ü§ó](https://huggingface.co/arjundd), and in [project folders](projects).

To use them, pass the URLs for the config and weights (model) files to `mr.get_model_from_zoo`:

```python
import meddlr as mr

model = mr.get_model_from_zoo(
  cfg_or_file="https://huggingface.co/arjundd/vortex-release/resolve/main/mridata_knee_3dfse/Supervised/config.yaml",
  weights_path="https://huggingface.co/arjundd/vortex-release/resolve/main/mridata_knee_3dfse/Supervised/model.ckpt",
)
```

## üìì Projects
Check out some [projects](projects) built with meddlr!

## ‚úèÔ∏è Contributing
Want to  add new features, fix a bug, or add your project? We'd love to include them! See [CONTRIBUTING.md](CONTRIBUTING.md) for more information.

## Acknowledgements
Meddlr's design for rapid experimentation and benchmarking is inspired by [detectron2](https://github.com/facebookresearch/detectron2).

## About
If you use Meddlr for your work, please consider citing the following work:

```
@article{desai2021noise2recon,
  title={Noise2Recon: A Semi-Supervised Framework for Joint MRI Reconstruction and Denoising},
  author={Desai, Arjun D and Ozturkler, Batu M and Sandino, Christopher M and Vasanawala, Shreyas and Hargreaves, Brian A and Re, Christopher M and Pauly, John M and Chaudhari, Akshay S},
  journal={arXiv preprint arXiv:2110.00075},
  year={2021}
}
```
