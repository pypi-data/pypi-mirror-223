# coding: utf-8

"""
    Firefly III API Client

    This is the Python client for Firefly III API  # noqa: E501

    The version of the OpenAPI document: 2.0.5
    Contact: james@firefly-iii.org
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from firefly_iii_client import schemas  # noqa: F401


class TransactionTypeFilter(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        enum_value_to_name = {
            "all": "ALL",
            "withdrawal": "WITHDRAWAL",
            "withdrawals": "WITHDRAWALS",
            "expense": "EXPENSE",
            "deposit": "DEPOSIT",
            "deposits": "DEPOSITS",
            "income": "INCOME",
            "transfer": "TRANSFER",
            "transfers": "TRANSFERS",
            "opening_balance": "OPENING_BALANCE",
            "reconciliation": "RECONCILIATION",
            "special": "SPECIAL",
            "specials": "SPECIALS",
            "default": "DEFAULT",
        }
    
    @schemas.classproperty
    def ALL(cls):
        return cls("all")
    
    @schemas.classproperty
    def WITHDRAWAL(cls):
        return cls("withdrawal")
    
    @schemas.classproperty
    def WITHDRAWALS(cls):
        return cls("withdrawals")
    
    @schemas.classproperty
    def EXPENSE(cls):
        return cls("expense")
    
    @schemas.classproperty
    def DEPOSIT(cls):
        return cls("deposit")
    
    @schemas.classproperty
    def DEPOSITS(cls):
        return cls("deposits")
    
    @schemas.classproperty
    def INCOME(cls):
        return cls("income")
    
    @schemas.classproperty
    def TRANSFER(cls):
        return cls("transfer")
    
    @schemas.classproperty
    def TRANSFERS(cls):
        return cls("transfers")
    
    @schemas.classproperty
    def OPENING_BALANCE(cls):
        return cls("opening_balance")
    
    @schemas.classproperty
    def RECONCILIATION(cls):
        return cls("reconciliation")
    
    @schemas.classproperty
    def SPECIAL(cls):
        return cls("special")
    
    @schemas.classproperty
    def SPECIALS(cls):
        return cls("specials")
    
    @schemas.classproperty
    def DEFAULT(cls):
        return cls("default")
