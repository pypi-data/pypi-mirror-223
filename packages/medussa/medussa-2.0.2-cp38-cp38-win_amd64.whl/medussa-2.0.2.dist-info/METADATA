Metadata-Version: 2.1
Name: medussa
Version: 2.0.2
Summary: Medussa: A cross-platform high-level audio library for Python
Home-page: https://github.com/cbrown1/medussa
Author: Christopher A. Brown, Joseph K. Ranweiler, Ross Bencina, Ryan W. Moore, Kutay B. Sezginel, Andrzej Ciarkowski
Author-email: cbrown1@pitt.edu
Maintainer: Christopher Brown
Maintainer-email: cbrown1@pitt.edu
License: GNU General Public License v3 or later
Keywords: sound audio signal wavplay
Platform: Win32
Platform: Linux
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Environment :: Console
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Multimedia :: Sound/Audio
Classifier: Topic :: Multimedia :: Sound/Audio :: Mixers
Classifier: Topic :: Multimedia :: Sound/Audio :: Players
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Natural Language :: English
Requires: numpy (>=1.3)
License-File: COPYING.md
License-File: AUTHORS.md
Requires-Dist: numpy (>=1.3)

Medussa is an easy to use high-level cross-platform audio library for Python
based on Port Audio and libsndfile. You can play NumPy arrays, stream sound
files of various formats from disk, or create pure tones or 'on-line' white
or pink noise. There are high-level functions like play_array (similar to
matlab's old wavplay function but with more features). Or you can access 
specific host api's or devices, create streams as needed, and control them 
all asynchronously. Or for the most control, you can access the port audio 
library directly. Sweet!


