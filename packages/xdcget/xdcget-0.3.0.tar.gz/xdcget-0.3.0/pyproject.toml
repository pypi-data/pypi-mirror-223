[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "xdcget"
dynamic = ["version"]
description = "experimental tool for collecting latest releases of webxdc apps"
license = {text = "MPL-2.0"}
requires-python = ">=3.9"
readme = "README.md"

scripts = {xdcget = "xdcget.main:main"}

classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: POSIX",
]


dependencies = [
    "requests",
    "termcolor",
    "toml",
]

[project.urls]
homepage = "https://codeberg.org/webxdc/xdcget"
issues = "https://codeberg.org/webxdc/xdcget/issues"

[tool.setuptools_scm]
write_to = "src/xdcget/_version.py"

[tool.pytest.ini_options]
addopts = "-v -ra --strict-markers"
norecursedirs = ".tox"
xfail_strict = true
timeout = 150
timeout_func_only = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist =
    py3
    lint

[testenv]
commands =
    pytest {posargs: tests}
passenv =
    XDCGET_GITHUB_USER
    XDCGET_GITHUB_TOKEN
    XDCGET_CODEBERG_USER
    XDCGET_CODEBERG_TOKEN
deps =
    pytest
    pytest-timeout
    pdbpp
    requests-mock


[testenv:lint]
skipsdist = True
skip_install = True
deps =
    ruff
    black
commands =
    black --quiet --check --diff src/xdcget tests/
    ruff src/xdcget tests/
"""

[tool.ruff]
select = [
    "E", "W", # pycodestyle
    "F", # Pyflakes
    "PTH", # flake8-use-pathlib
    "I", # isort
    "RUF", # Ruff-specific rules
    "UP", # pyupgrade
    "YTT", # flake8-2020
    "D400", "D401", "D402", "D403", "D404", # pydocstyle
]
