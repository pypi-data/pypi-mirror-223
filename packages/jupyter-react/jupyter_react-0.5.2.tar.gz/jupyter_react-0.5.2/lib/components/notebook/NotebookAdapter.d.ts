import { CommandRegistry } from '@lumino/commands';
import { BoxPanel } from '@lumino/widgets';
import { ServiceManager } from '@jupyterlab/services';
import { NotebookPanel } from '@jupyterlab/notebook';
import { CompletionHandler } from '@jupyterlab/completer';
import { INotebookContent, CellType } from '@jupyterlab/nbformat';
import { Kernel } from "./../../jupyter/services/kernel/Kernel";
import { INotebookProps } from './Notebook';
export declare class NotebookAdapter {
    private _boxPanel;
    private _notebookPanel?;
    private _uid;
    private _serviceManager;
    private _commandRegistry;
    private _path;
    private _nbformat;
    private _tracker?;
    private _kernel?;
    private _store?;
    private _ipywidgets?;
    private _iPyWidgetsClassicManager?;
    private _CellSidebar?;
    private _nbgrader;
    private _context?;
    private _renderers;
    private _rendermime?;
    constructor(props: INotebookProps, store: any, serviceManager: ServiceManager);
    private loadNotebook;
    setNbformat(nbformat: INotebookContent): void;
    setupCompleter(notebookPanel: NotebookPanel): CompletionHandler;
    changeKernel(kernel: Kernel): void;
    get uid(): string;
    get notebookPanel(): NotebookPanel | undefined;
    get commands(): CommandRegistry;
    get panel(): BoxPanel;
    get serviceManager(): ServiceManager;
    setDefaultCellType: (cellType: CellType) => void;
    changeCellType: (cellType: CellType) => void;
    private doChangeCellType;
    dispose: () => void;
}
export default NotebookAdapter;
