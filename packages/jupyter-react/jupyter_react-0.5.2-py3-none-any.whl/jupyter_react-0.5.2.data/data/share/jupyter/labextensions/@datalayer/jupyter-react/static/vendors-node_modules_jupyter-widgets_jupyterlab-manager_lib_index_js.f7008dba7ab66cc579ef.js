"use strict";
(self["webpackChunk_datalayer_jupyter_react"] = self["webpackChunk_datalayer_jupyter_react"] || []).push([["vendors-node_modules_jupyter-widgets_jupyterlab-manager_lib_index_js"],{

/***/ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/index.js":
/*!************************************************************************************!*\
  !*** ../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KernelWidgetManager": () => (/* reexport safe */ _manager__WEBPACK_IMPORTED_MODULE_1__.KernelWidgetManager),
/* harmony export */   "LabWidgetManager": () => (/* reexport safe */ _manager__WEBPACK_IMPORTED_MODULE_1__.LabWidgetManager),
/* harmony export */   "WidgetManager": () => (/* reexport safe */ _manager__WEBPACK_IMPORTED_MODULE_1__.WidgetManager),
/* harmony export */   "WidgetRenderer": () => (/* reexport safe */ _renderer__WEBPACK_IMPORTED_MODULE_2__.WidgetRenderer),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "output": () => (/* reexport module object */ _output__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   "registerWidgetManager": () => (/* reexport safe */ _plugin__WEBPACK_IMPORTED_MODULE_0__.registerWidgetManager)
/* harmony export */ });
/* harmony import */ var _plugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plugin */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/plugin.js");
/* harmony import */ var _output__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./output */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/output.js");
/* harmony import */ var _manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/manager.js");
/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderer */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/renderer.js");
// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_plugin__WEBPACK_IMPORTED_MODULE_0__["default"]);






/***/ }),

/***/ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/plugin.js":
/*!*************************************************************************************!*\
  !*** ../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/plugin.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "baseWidgetsPlugin": () => (/* binding */ baseWidgetsPlugin),
/* harmony export */   "controlWidgetsPlugin": () => (/* binding */ controlWidgetsPlugin),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "managerPlugin": () => (/* binding */ managerPlugin),
/* harmony export */   "outputWidgetPlugin": () => (/* binding */ outputWidgetPlugin),
/* harmony export */   "registerWidgetManager": () => (/* binding */ registerWidgetManager)
/* harmony export */ });
/* harmony import */ var _jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/settingregistry */ "webpack/sharing/consume/default/@jupyterlab/settingregistry");
/* harmony import */ var _jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyterlab/notebook */ "webpack/sharing/consume/default/@jupyterlab/notebook");
/* harmony import */ var _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _jupyterlab_mainmenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/mainmenu */ "webpack/sharing/consume/default/@jupyterlab/mainmenu");
/* harmony import */ var _jupyterlab_mainmenu__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_mainmenu__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jupyterlab/rendermime */ "webpack/sharing/consume/default/@jupyterlab/rendermime");
/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _jupyterlab_logconsole__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @jupyterlab/logconsole */ "webpack/sharing/consume/default/@jupyterlab/logconsole");
/* harmony import */ var _jupyterlab_logconsole__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_logconsole__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _lumino_algorithm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @lumino/algorithm */ "webpack/sharing/consume/default/@lumino/algorithm");
/* harmony import */ var _lumino_algorithm__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_lumino_algorithm__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _lumino_disposable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @lumino/disposable */ "webpack/sharing/consume/default/@lumino/disposable");
/* harmony import */ var _lumino_disposable__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_lumino_disposable__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _lumino_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @lumino/properties */ "webpack/sharing/consume/default/@lumino/properties");
/* harmony import */ var _lumino_properties__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_lumino_properties__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./renderer */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/renderer.js");
/* harmony import */ var _manager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./manager */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/manager.js");
/* harmony import */ var _output__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./output */ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/output.js");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @jupyter-widgets/base */ "webpack/sharing/consume/default/@jupyter-widgets/base/@jupyter-widgets/base?a94e");
/* harmony import */ var _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _jupyter_widgets_controls_lib_version__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @jupyter-widgets/controls/lib/version */ "../../../../../node_modules/@jupyter-widgets/controls/lib/version.js");
/* harmony import */ var _jupyter_widgets_base_css_index_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @jupyter-widgets/base/css/index.css */ "../../../../../node_modules/@jupyter-widgets/base/css/index.css");
/* harmony import */ var _jupyter_widgets_controls_css_widgets_base_css__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @jupyter-widgets/controls/css/widgets-base.css */ "../../../../../node_modules/@jupyter-widgets/controls/css/widgets-base.css");
/* harmony import */ var _jupyterlab_services__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @jupyterlab/services */ "webpack/sharing/consume/default/@jupyterlab/services");
/* harmony import */ var _jupyterlab_services__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_services__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @jupyterlab/translation */ "webpack/sharing/consume/default/@jupyterlab/translation");
/* harmony import */ var _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_translation__WEBPACK_IMPORTED_MODULE_13__);
// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.












// We import only the version from the specific module in controls so that the
// controls code can be split and dynamically loaded in webpack.





const WIDGET_REGISTRY = [];
/**
 * The cached settings.
 */
const SETTINGS = { saveState: false };
/**
 * Iterate through all widget renderers in a notebook.
 */
function* widgetRenderers(nb) {
    for (const cell of nb.widgets) {
        if (cell.model.type === 'code') {
            for (const codecell of cell.outputArea.widgets) {
                // We use Array.from instead of using Lumino 2 (JLab 4) iterator
                // This is to support Lumino 1 (JLab 3) as well
                for (const output of Array.from(codecell.children())) {
                    if (output instanceof _renderer__WEBPACK_IMPORTED_MODULE_14__.WidgetRenderer) {
                        yield output;
                    }
                }
            }
        }
    }
}
/**
 * Iterate through all matching linked output views
 */
function* outputViews(app, path) {
    const linkedViews = (0,_lumino_algorithm__WEBPACK_IMPORTED_MODULE_5__.filter)(app.shell.widgets(), (w) => w.id.startsWith('LinkedOutputView-') && w.path === path);
    // We use Array.from instead of using Lumino 2 (JLab 4) iterator
    // This is to support Lumino 1 (JLab 3) as well
    for (const view of Array.from(linkedViews)) {
        for (const outputs of Array.from(view.children())) {
            for (const output of Array.from(outputs.children())) {
                if (output instanceof _renderer__WEBPACK_IMPORTED_MODULE_14__.WidgetRenderer) {
                    yield output;
                }
            }
        }
    }
}
function* chain(...args) {
    for (const it of args) {
        yield* it;
    }
}
function registerWidgetManager(context, rendermime, renderers) {
    let wManager = Private.widgetManagerProperty.get(context);
    if (!wManager) {
        wManager = new _manager__WEBPACK_IMPORTED_MODULE_15__.WidgetManager(context, rendermime, SETTINGS);
        WIDGET_REGISTRY.forEach((data) => wManager.register(data));
        Private.widgetManagerProperty.set(context, wManager);
    }
    for (const r of renderers) {
        r.manager = wManager;
    }
    // Replace the placeholder widget renderer with one bound to this widget
    // manager.
    rendermime.removeMimeType(_manager__WEBPACK_IMPORTED_MODULE_15__.WIDGET_VIEW_MIMETYPE);
    rendermime.addFactory({
        safe: false,
        mimeTypes: [_manager__WEBPACK_IMPORTED_MODULE_15__.WIDGET_VIEW_MIMETYPE],
        createRenderer: (options) => new _renderer__WEBPACK_IMPORTED_MODULE_14__.WidgetRenderer(options, wManager),
    }, -10);
    return new _lumino_disposable__WEBPACK_IMPORTED_MODULE_6__.DisposableDelegate(() => {
        if (rendermime) {
            rendermime.removeMimeType(_manager__WEBPACK_IMPORTED_MODULE_15__.WIDGET_VIEW_MIMETYPE);
        }
        wManager.dispose();
    });
}
/**
 * The widget manager provider.
 */
const managerPlugin = {
    id: '@jupyter-widgets/jupyterlab-manager:plugin',
    requires: [_jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_3__.IRenderMimeRegistry],
    optional: [
        _jupyterlab_notebook__WEBPACK_IMPORTED_MODULE_1__.INotebookTracker,
        _jupyterlab_settingregistry__WEBPACK_IMPORTED_MODULE_0__.ISettingRegistry,
        _jupyterlab_mainmenu__WEBPACK_IMPORTED_MODULE_2__.IMainMenu,
        _jupyterlab_logconsole__WEBPACK_IMPORTED_MODULE_4__.ILoggerRegistry,
        _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_13__.ITranslator,
    ],
    provides: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.IJupyterWidgetRegistry,
    activate: activateWidgetExtension,
    autoStart: true,
};
function updateSettings(settings) {
    SETTINGS.saveState = settings.get('saveState').composite;
}
/**
 * Activate the widget extension.
 */
function activateWidgetExtension(app, rendermime, tracker, settingRegistry, menu, loggerRegistry, translator) {
    const { commands } = app;
    const trans = (translator !== null && translator !== void 0 ? translator : _jupyterlab_translation__WEBPACK_IMPORTED_MODULE_13__.nullTranslator).load('jupyterlab_widgets');
    const bindUnhandledIOPubMessageSignal = (nb) => {
        if (!loggerRegistry) {
            return;
        }
        const wManager = Private.widgetManagerProperty.get(nb.context);
        if (wManager) {
            wManager.onUnhandledIOPubMessage.connect((sender, msg) => {
                const logger = loggerRegistry.getLogger(nb.context.path);
                let level = 'warning';
                if (_jupyterlab_services__WEBPACK_IMPORTED_MODULE_12__.KernelMessage.isErrorMsg(msg) ||
                    (_jupyterlab_services__WEBPACK_IMPORTED_MODULE_12__.KernelMessage.isStreamMsg(msg) && msg.content.name === 'stderr')) {
                    level = 'error';
                }
                const data = Object.assign(Object.assign({}, msg.content), { output_type: msg.header.msg_type });
                logger.rendermime = nb.content.rendermime;
                logger.log({ type: 'output', data, level });
            });
        }
    };
    if (settingRegistry !== null) {
        settingRegistry
            .load(managerPlugin.id)
            .then((settings) => {
            settings.changed.connect(updateSettings);
            updateSettings(settings);
        })
            .catch((reason) => {
            console.error(reason.message);
        });
    }
    // Add a placeholder widget renderer.
    rendermime.addFactory({
        safe: false,
        mimeTypes: [_manager__WEBPACK_IMPORTED_MODULE_15__.WIDGET_VIEW_MIMETYPE],
        createRenderer: (options) => new _renderer__WEBPACK_IMPORTED_MODULE_14__.WidgetRenderer(options),
    }, -10);
    if (tracker !== null) {
        tracker.forEach((panel) => {
            registerWidgetManager(panel.context, panel.content.rendermime, chain(widgetRenderers(panel.content), outputViews(app, panel.context.path)));
            bindUnhandledIOPubMessageSignal(panel);
        });
        tracker.widgetAdded.connect((sender, panel) => {
            registerWidgetManager(panel.context, panel.content.rendermime, chain(widgetRenderers(panel.content), outputViews(app, panel.context.path)));
            bindUnhandledIOPubMessageSignal(panel);
        });
    }
    if (settingRegistry !== null) {
        // Add a command for automatically saving (jupyter-)widget state.
        commands.addCommand('@jupyter-widgets/jupyterlab-manager:saveWidgetState', {
            label: trans.__('Save Widget State Automatically'),
            execute: (args) => {
                return settingRegistry
                    .set(managerPlugin.id, 'saveState', !SETTINGS.saveState)
                    .catch((reason) => {
                    console.error(`Failed to set ${managerPlugin.id}: ${reason.message}`);
                });
            },
            isToggled: () => SETTINGS.saveState,
        });
    }
    if (menu) {
        menu.settingsMenu.addGroup([
            { command: '@jupyter-widgets/jupyterlab-manager:saveWidgetState' },
        ]);
    }
    return {
        registerWidget(data) {
            WIDGET_REGISTRY.push(data);
        },
    };
}
/**
 * The base widgets.
 */
const baseWidgetsPlugin = {
    id: `@jupyter-widgets/jupyterlab-manager:base-${_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.JUPYTER_WIDGETS_VERSION}`,
    requires: [_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.IJupyterWidgetRegistry],
    autoStart: true,
    activate: (app, registry) => {
        registry.registerWidget({
            name: '@jupyter-widgets/base',
            version: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.JUPYTER_WIDGETS_VERSION,
            exports: {
                WidgetModel: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.WidgetModel,
                WidgetView: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.WidgetView,
                DOMWidgetView: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.DOMWidgetView,
                DOMWidgetModel: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.DOMWidgetModel,
                LayoutModel: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.LayoutModel,
                LayoutView: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.LayoutView,
                StyleModel: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.StyleModel,
                StyleView: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.StyleView,
                ErrorWidgetView: _jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.ErrorWidgetView,
            },
        });
    },
};
/**
 * The control widgets.
 */
const controlWidgetsPlugin = {
    id: `@jupyter-widgets/jupyterlab-manager:controls-${_jupyter_widgets_controls_lib_version__WEBPACK_IMPORTED_MODULE_9__.JUPYTER_CONTROLS_VERSION}`,
    requires: [_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.IJupyterWidgetRegistry],
    autoStart: true,
    activate: (app, registry) => {
        registry.registerWidget({
            name: '@jupyter-widgets/controls',
            version: _jupyter_widgets_controls_lib_version__WEBPACK_IMPORTED_MODULE_9__.JUPYTER_CONTROLS_VERSION,
            exports: () => {
                return new Promise((resolve, reject) => {
                    Promise.all(/*! require.ensure | @jupyter-widgets/controls */[__webpack_require__.e("webpack_sharing_consume_default_jupyter-widgets_controls_jupyter-widgets_controls"), __webpack_require__.e("@jupyter-widgets/controls")]).then(((require) => {
                        // eslint-disable-next-line @typescript-eslint/no-var-requires
                        resolve(__webpack_require__(/*! @jupyter-widgets/controls */ "webpack/sharing/consume/default/@jupyter-widgets/controls/@jupyter-widgets/controls?13a6"));
                    }).bind(null, __webpack_require__))['catch']((err) => {
                        reject(err);
                    });
                });
            },
        });
    },
};
/**
 * The output widget.
 */
const outputWidgetPlugin = {
    id: `@jupyter-widgets/jupyterlab-manager:output-${_output__WEBPACK_IMPORTED_MODULE_16__.OUTPUT_WIDGET_VERSION}`,
    requires: [_jupyter_widgets_base__WEBPACK_IMPORTED_MODULE_8__.IJupyterWidgetRegistry],
    autoStart: true,
    activate: (app, registry) => {
        registry.registerWidget({
            name: '@jupyter-widgets/output',
            version: _output__WEBPACK_IMPORTED_MODULE_16__.OUTPUT_WIDGET_VERSION,
            exports: { OutputModel: _output__WEBPACK_IMPORTED_MODULE_16__.OutputModel, OutputView: _output__WEBPACK_IMPORTED_MODULE_16__.OutputView },
        });
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([
    managerPlugin,
    baseWidgetsPlugin,
    controlWidgetsPlugin,
    outputWidgetPlugin,
]);
var Private;
(function (Private) {
    /**
     * A private attached property for a widget manager.
     */
    Private.widgetManagerProperty = new _lumino_properties__WEBPACK_IMPORTED_MODULE_7__.AttachedProperty({
        name: 'widgetManager',
        create: (owner) => undefined,
    });
})(Private || (Private = {}));


/***/ }),

/***/ "../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/renderer.js":
/*!***************************************************************************************!*\
  !*** ../../../../../node_modules/@jupyter-widgets/jupyterlab-manager/lib/renderer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WidgetRenderer": () => (/* binding */ WidgetRenderer)
/* harmony export */ });
/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lumino/coreutils */ "webpack/sharing/consume/default/@lumino/coreutils");
/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lumino_widgets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lumino/widgets */ "webpack/sharing/consume/default/@lumino/widgets");
/* harmony import */ var _lumino_widgets__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lumino_widgets__WEBPACK_IMPORTED_MODULE_1__);
// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.


/**
 * A renderer for widgets.
 */
class WidgetRenderer extends _lumino_widgets__WEBPACK_IMPORTED_MODULE_1__.Panel {
    constructor(options, manager) {
        super();
        this._manager = new _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__.PromiseDelegate();
        this._rerenderMimeModel = null;
        this.mimeType = options.mimeType;
        if (manager) {
            this.manager = manager;
        }
    }
    /**
     * The widget manager.
     */
    set manager(value) {
        value.restored.connect(this._rerender, this);
        this._manager.resolve(value);
    }
    async renderModel(model) {
        const source = model.data[this.mimeType];
        // Let's be optimistic, and hope the widget state will come later.
        this.node.textContent = 'Loading widget...';
        const manager = await this._manager.promise;
        // If there is no model id, the view was removed, so hide the node.
        if (source.model_id === '') {
            this.hide();
            return Promise.resolve();
        }
        let wModel;
        try {
            // Presume we have a DOMWidgetModel. Should we check for sure?
            wModel = (await manager.get_model(source.model_id));
        }
        catch (err) {
            if (manager.restoredStatus) {
                // The manager has been restored, so this error won't be going away.
                this.node.textContent = 'Error displaying widget: model not found';
                this.addClass('jupyter-widgets');
                console.error(err);
                return;
            }
            // Store the model for a possible rerender
            this._rerenderMimeModel = model;
            return;
        }
        // Successful getting the model, so we don't need to try to rerender.
        this._rerenderMimeModel = null;
        let widget;
        try {
            widget = (await manager.create_view(wModel)).luminoWidget;
        }
        catch (err) {
            this.node.textContent = 'Error displaying widget';
            this.addClass('jupyter-widgets');
            console.error(err);
            return;
        }
        // Clear any previous loading message.
        this.node.textContent = '';
        this.addWidget(widget);
        // When the widget is disposed, hide this container and make sure we
        // change the output model to reflect the view was closed.
        widget.disposed.connect(() => {
            this.hide();
            source.model_id = '';
        });
    }
    /**
     * Dispose the resources held by the manager.
     */
    dispose() {
        if (this.isDisposed) {
            return;
        }
        this._manager = null;
        super.dispose();
    }
    _rerender() {
        if (this._rerenderMimeModel) {
            // Clear the error message
            this.node.textContent = '';
            this.removeClass('jupyter-widgets');
            // Attempt to rerender.
            this.renderModel(this._rerenderMimeModel);
        }
    }
}


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_jupyter-widgets_jupyterlab-manager_lib_index_js.f7008dba7ab66cc579ef.js.map