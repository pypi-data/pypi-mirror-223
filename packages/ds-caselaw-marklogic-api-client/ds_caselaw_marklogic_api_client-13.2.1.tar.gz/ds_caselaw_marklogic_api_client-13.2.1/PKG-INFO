Metadata-Version: 2.1
Name: ds-caselaw-marklogic-api-client
Version: 13.2.1
Summary: An API client for interacting with the underlying data in Find Caselaw.
Home-page: https://github.com/nationalarchives/ds-caselaw-custom-api-client
Keywords: national archives,caselaw
Author: The National Archives
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: boto3 (>=1.26.112,<2.0.0)
Requires-Dist: certifi (>=2022.12.7,<2024.0.0)
Requires-Dist: charset-normalizer (>=3.0.0,<4.0.0)
Requires-Dist: django-environ (>=0.10.0,<0.11.0)
Requires-Dist: ds-caselaw-utils (>=1.0.0,<2.0.0)
Requires-Dist: idna (>=3.4,<4.0)
Requires-Dist: lxml (>=4.9.2,<5.0.0)
Requires-Dist: memoization (>=0.4.0,<0.5.0)
Requires-Dist: requests (>=2.28.2,<3.0.0)
Requires-Dist: requests-toolbelt (>=0.10.1,<1.1.0)
Requires-Dist: urllib3 (>=1.26.15,<2.0.0)
Description-Content-Type: text/markdown

# The National Archives: Find Case Law

This repository is part of the [Find Case Law](https://caselaw.nationalarchives.gov.uk/) project at [The National Archives](https://www.nationalarchives.gov.uk/). For more information on the project, check [the documentation](https://github.com/nationalarchives/ds-find-caselaw-docs).

# MarkLogic API Client

[![PyPI](https://img.shields.io/pypi/v/ds-caselaw-marklogic-api-client)](https://pypi.org/project/ds-caselaw-marklogic-api-client/) ![Libraries.io dependency status for latest release](https://img.shields.io/librariesio/release/pypi/ds-caselaw-marklogic-api-client)

This is an API Client for connecting to Marklogic for The National Archive's Caselaw site.

This package is published on PyPI: https://pypi.org/project/ds-caselaw-marklogic-api-client/

## Usage

You can find documentation of the client class and available methods [here](https://nationalarchives.github.io/ds-caselaw-custom-api-client).

## Testing

To run the test suite:

```bash
poetry install
poetry run pytest
```

## Making changes

When making a change, update the [changelog](CHANGELOG.md) using the
[Keep a Changelog 1.0.0](https://keepachangelog.com/en/1.0.0/) format. Pull
requests should not be merged before any relevant updates are made.

## Releasing

When making a new release, update the [changelog](CHANGELOG.md) in the release
pull request.

The package will **only** be released to PyPI if the branch is tagged. A merge
to main alone will **not** trigger a release to PyPI.

To create a release:

0. Update the version number in `pyproject.toml`
0. Create a branch `release/v{major}.{minor}.{patch}`
0. Update `CHANGELOG.md` for the release
0. Commit and push
0. Open a PR from that branch to main
0. Get approval on the PR
0. Merge the PR to main and push
0. Tag the merge commit on `main` with `v{major}.{minor}.{patch}` and push the tag
0. Create a release in [Github releases](https://github.com/nationalarchives/ds-caselaw-custom-api-client/releases)
using the created tag

