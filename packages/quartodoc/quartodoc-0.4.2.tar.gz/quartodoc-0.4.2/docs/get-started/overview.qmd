---
title: Overview
aliases:
  - ../index.html
jupyter:
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

::: {.callout-note} 
quartodoc is used to create the API documentation for [shiny], [siuba], and [vetiver].

It's full-featured and relatively stable, but may see some small changes in the the name of making API documentation a real delight.

If you're interested in using quartodoc for your package's documentation, please open an issue, so we can make sure it does exactly what you want.
:::

quartodoc lets you quickly generate python package documentation,
using markdown and [quarto](https://quarto.org).
It is designed as an alternative to Sphinx.

## Installation

```bash
python -m pip install quartodoc

# or from github
python -m pip install git+https://github.com/machow/quartodoc.git
```

:::{.callout-note}
In order to install quarto, see the quarto [get started page](https://quarto.org/docs/get-started/).
:::


## Basic use

Getting started with quartodoc takes two steps: configuring a quarto website,
and generating documentation pages for your library.

First, create a `_quarto.yml` file with the following:

```yaml
project:
  type: website

# tell quarto to read the generated sidebar
metadata-files:
  - _sidebar.yml


quartodoc:
  # the name used to import the package
  package: quartodoc

  # write sidebar data to this file
  sidebar: _sidebar.yml

  sections:
    - title: Some functions
      desc: Functions to inspect docstrings.
      contents:
        # the functions being documented in the package.
        # you can refer to anything: class methods, modules, etc..
        - get_object
        - preview
```

Next, run this command to generate your API pages:

```bash
quartodoc build
```

This should create a `reference/` directory with an `index.qmd` and documentation
pages for listed functions, like `get_object` and `preview`.

Finally, preview your website with quarto:

```bash
quarto preview
```

## Rebuilding site

You can preview your `quartodoc` site using the following commands:

First, watch for changes to the library you are documenting so that your docs will automatically re-generate:

```bash
quartodoc build --watch
```

Second, preview your site:

```bash
quarto preview
```

## Looking up objects

Finding python objects to document involves two pieces of configuration:

* the package name.
* a list of objects for content.

Note that quartodoc can look up anything---whether functions, modules, classes, attributes, or methods.

```yaml
quartodoc:
  package: quartodoc
  sections:
    - title: Some section
      desc: ""
      contents:
        - get_object        # function: quartodoc.get_object
        - ast.preview       # submodule func: quartodoc.ast.preview
        - MdRenderer        # class: quartodoc.MdRenderer
        - MdRenderer.render # method: quartodoc.MDRenderer.render
        - renderers         # module: quartodoc.renderers
```

The functions listed in `contents` are assumed to be imported from the package.


## Example sites

### Demo sites

| style | source | layout |
| ----- | ------ | ------ |
| [pkgdown] | [github][pkgdown-code] | Index page with a title and short description for functions listed in each section. Each function gets its own documentation page. |
| [single-page] | [github][sp-code] | Index page has function documentation embedded on it. |

### Packages using quartodoc


| package | source | about |
| ----- | ------ | ------ |
| [siuba] | [github][sb-code] | Data analysis library. |
| [shiny][shiny] |  | Dashboarding framework. |
| [vetiver][vetiver] | [github][vt-code] | A tool to version, share, deploy and monitor ML models. |

: {tbl-colwidths="[20, 20, 60]"}

[pkgdown]: /examples/pkgdown/reference
[pkgdown-code]: https://github.com/machow/quartodoc/tree/main/examples/pkgdown
[single-page]: /examples/single-page/reference
[sp-code]: https://github.com/machow/quartodoc/tree/main/examples/single-page
[shiny]: https://shiny.rstudio.com/py/api/
[vetiver]: https://rstudio.github.io/vetiver-python/stable/reference/
[vt-code]: https://github.com/rstudio/vetiver-python
[siuba]: https://siuba.org/api/
[sb-code]: https://github.com/machow/siuba.org
