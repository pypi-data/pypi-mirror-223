[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gaohn-common-utils"
version = "0.0.103"
authors = [
  { name="Gao Hongnan", email="hongnangao@gmail.com" },
]
description = "A small utility package"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "numpy==1.24.3",
    "requests==2.28.2",
    "prettytable==3.7.0",
    "rich==13.3.5",
    "torch==2.0.1",
    "torchvision==0.15.2",
    "torchaudio==2.0.2",
    "pandas==1.5.3",
    "db-dtypes==1.1.1",
    "pytz==2023.3",
    "pydantic==2.0",
    "tabulate==0.9.0",
    "google-cloud-bigquery==3.10.0",
    "google-cloud-storage==2.8.0",
    "python-dotenv==1.0.0",
    "ipython",
]

[project.optional-dependencies]
dev = [
    "black==23.3.0",
    "pylint==2.17.4",
    "pytest==6.2.5",
    "mypy==1.3.0",
    "isort==5.12.0",
    "bandit==1.7.5",
    "mypy==1.3.0",
    "toml==0.10.2",
    "colorama==0.4.4",
    "pytest-cov==4.0.0",
    "coverage==7.0.5",
]

[project.urls]
"Homepage" = "https://github.com/gao-hongnan/common-utils"
"Bug Tracker" = "https://github.com/gao-hongnan/common-utils/issues"

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39']
verbose = false
diff = false
color = false
include = '\.pyi?$'
exclude = '''
/(
    \.eggs                      # exclude a few common directories in the
  | \.git                       # root of the project
  | \.hg
  | \.mypy_cache
  | \.tox
  | (.*/)?venv_.*/.*
  | (.*/)?\.venv/.*
  | (.*/)?venv/.*
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
verbose = false
skip = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    "venv_*",
    "venv",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
]
skip_glob = [
    "**/venv_*",
    "venv",
    ".venv",
]

[tool.pylint]
    [tool.pylint.'MASTER']
    ignore-paths = [
        "(.*\\/)?venv_.*\\/.*",
        "(.*\\/)?\\.venv\\/.*",
        "(.*\\/)?venv\\/.*",
    ]
    ignore = [
        ".eggs",
        ".git",
        ".hg",
        ".mypy_cache",
        ".tox",
        "venv_*",
        "venv",
        ".venv",
        "_build",
        "buck-out",
        "build",
        "dist",
    ]
    [tool.pylint.'MESSAGES CONTROL']
    disable = [
        "access-member-before-definition",
        "attribute-defined-outside-init",
        "duplicate-code",
        "logging-fstring-interpolation",
        "no-member",
        "missing-module-docstring",
    ]

# https://bandit.readthedocs.io/en/latest/config.html
[tool.bandit]
exclude_dirs = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    "venv_*",
    "venv",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
]

# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disable_error_code = ['override', 'attr-defined']
disallow_any_generics = false

# pyproject.toml
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra" # -ra -q
testpaths = [
    "tests",
    # "tests/unit",
    # "tests/integration",
    # "tests/system",
]
filterwarnings = "ignore::DeprecationWarning" # ignore deprecation warnings when running tests
