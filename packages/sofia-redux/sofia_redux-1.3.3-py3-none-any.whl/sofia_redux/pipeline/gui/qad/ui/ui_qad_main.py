# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qad_main.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setFocusPolicy(QtCore.Qt.NoFocus)
        MainWindow.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.dirLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dirLabel.sizePolicy().hasHeightForWidth())
        self.dirLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.dirLabel.setFont(font)
        self.dirLabel.setText("")
        self.dirLabel.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.dirLabel.setObjectName("dirLabel")
        self.horizontalLayout.addWidget(self.dirLabel)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.treeView = QtWidgets.QTreeView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.treeView.sizePolicy().hasHeightForWidth())
        self.treeView.setSizePolicy(sizePolicy)
        self.treeView.setFrameShape(QtWidgets.QFrame.Panel)
        self.treeView.setFrameShadow(QtWidgets.QFrame.Raised)
        self.treeView.setAlternatingRowColors(True)
        self.treeView.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.treeView.setSortingEnabled(True)
        self.treeView.setAllColumnsShowFocus(False)
        self.treeView.setObjectName("treeView")
        self.treeView.header().setSortIndicatorShown(True)
        self.treeView.header().setStretchLastSection(True)
        self.verticalLayout.addWidget(self.treeView)
        self.bottomButtonBar = QtWidgets.QHBoxLayout()
        self.bottomButtonBar.setObjectName("bottomButtonBar")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.bottomButtonBar.addWidget(self.label)
        self.fileFilterBox = QtWidgets.QLineEdit(self.centralwidget)
        self.fileFilterBox.setObjectName("fileFilterBox")
        self.bottomButtonBar.addWidget(self.fileFilterBox)
        self.verticalLayout.addLayout(self.bottomButtonBar)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 22))
        self.menubar.setAutoFillBackground(False)
        self.menubar.setStyleSheet("QMenuBar {\n"
"    background: transparent;\n"
"    border-bottom: 1px solid rgb(179, 179, 179);\n"
"}\n"
"\n"
"QMenuBar::item {\n"
"    spacing: 3px;\n"
"    padding: 2px 6px;\n"
"    background: transparent;\n"
"}")
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.toolBar.setIconSize(QtCore.QSize(22, 22))
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.LeftToolBarArea, self.toolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.statusBar.setFont(font)
        self.statusBar.setAutoFillBackground(False)
        self.statusBar.setStyleSheet("#statusBar {\n"
"    border-top: 1px solid rgb(183, 183, 183)\n"
"}")
        self.statusBar.setSizeGripEnabled(True)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionOpenDirectory = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/Tango/16x16/document-open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpenDirectory.setIcon(icon)
        self.actionOpenDirectory.setObjectName("actionOpenDirectory")
        self.actionGoPrevious = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/Tango/22x22/go-up.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGoPrevious.setIcon(icon1)
        self.actionGoPrevious.setObjectName("actionGoPrevious")
        self.actionGoNext = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/Tango/22x22/go-down.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGoNext.setIcon(icon2)
        self.actionGoNext.setObjectName("actionGoNext")
        self.actionGoHome = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/Tango/22x22/go-home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGoHome.setIcon(icon3)
        self.actionGoHome.setObjectName("actionGoHome")
        self.actionPhotometrySettings = QtWidgets.QAction(MainWindow)
        self.actionPhotometrySettings.setObjectName("actionPhotometrySettings")
        self.actionSpectralCutSettings = QtWidgets.QAction(MainWindow)
        self.actionSpectralCutSettings.setObjectName("actionSpectralCutSettings")
        self.actionDisplaySettings = QtWidgets.QAction(MainWindow)
        self.actionDisplaySettings.setObjectName("actionDisplaySettings")
        self.actionSaveSettings = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/Tango/16x16/document-save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveSettings.setIcon(icon4)
        self.actionSaveSettings.setObjectName("actionSaveSettings")
        self.actionImExam = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/Tango/22x22/applications-accessories.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImExam.setIcon(icon5)
        self.actionImExam.setObjectName("actionImExam")
        self.actionDisplayHeader = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/Tango/22x22/edit-find.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDisplayHeader.setIcon(icon6)
        self.actionDisplayHeader.setObjectName("actionDisplayHeader")
        self.actionPlotSettings = QtWidgets.QAction(MainWindow)
        self.actionPlotSettings.setObjectName("actionPlotSettings")
        self.menuFile.addAction(self.actionOpenDirectory)
        self.menuSettings.addAction(self.actionSaveSettings)
        self.menuSettings.addAction(self.actionDisplaySettings)
        self.menuSettings.addAction(self.actionPhotometrySettings)
        self.menuSettings.addAction(self.actionPlotSettings)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.toolBar.addAction(self.actionGoHome)
        self.toolBar.addAction(self.actionGoPrevious)
        self.toolBar.addAction(self.actionGoNext)
        self.toolBar.addAction(self.actionImExam)
        self.toolBar.addAction(self.actionDisplayHeader)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "QAD"))
        self.label_3.setText(_translate("MainWindow", "Current directory:"))
        self.label.setText(_translate("MainWindow", "File filter:"))
        self.fileFilterBox.setToolTip(_translate("MainWindow", "Enter file filter(s), separated by commas"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "QAD Tool Bar"))
        self.actionOpenDirectory.setText(_translate("MainWindow", "&Open Directory"))
        self.actionOpenDirectory.setToolTip(_translate("MainWindow", "Open Directory"))
        self.actionGoPrevious.setText(_translate("MainWindow", "Go Previous"))
        self.actionGoPrevious.setToolTip(_translate("MainWindow", "Navigate up a directory"))
        self.actionGoNext.setText(_translate("MainWindow", "Go Next"))
        self.actionGoNext.setToolTip(_translate("MainWindow", "Navigate down a directory"))
        self.actionGoHome.setText(_translate("MainWindow", "Go Home"))
        self.actionGoHome.setToolTip(_translate("MainWindow", "Navigate to home"))
        self.actionPhotometrySettings.setText(_translate("MainWindow", "Photometry settings..."))
        self.actionPhotometrySettings.setToolTip(_translate("MainWindow", "Set ImExam parameters"))
        self.actionSpectralCutSettings.setText(_translate("MainWindow", "Spectral cut settings..."))
        self.actionSpectralCutSettings.setToolTip(_translate("MainWindow", "Set spectral cut parameters"))
        self.actionDisplaySettings.setText(_translate("MainWindow", "Display settings..."))
        self.actionDisplaySettings.setToolTip(_translate("MainWindow", "Set display parameters"))
        self.actionSaveSettings.setText(_translate("MainWindow", "Save current settings"))
        self.actionSaveSettings.setToolTip(_translate("MainWindow", "Save current settings as default"))
        self.actionImExam.setText(_translate("MainWindow", "ImExam"))
        self.actionImExam.setToolTip(_translate("MainWindow", "Launch ImExam in DS9 window"))
        self.actionDisplayHeader.setText(_translate("MainWindow", "Display Header"))
        self.actionDisplayHeader.setToolTip(_translate("MainWindow", "Display FITS headers"))
        self.actionPlotSettings.setText(_translate("MainWindow", "Plot settings..."))

from ...ui import tango_rc
