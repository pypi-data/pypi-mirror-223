# Load SOFIA defaults
config = sofia/default.cfg

projection = TAN

# The ordering of models in the default reduction pipeline.
ordering = dejump, offsets, drifts, correlated.obs-channels, correlated.sky, correlated.nonlinearity, correlated.polarrays, correlated.telescope-x, correlated.chopper-x, correlated.chopper-y, correlated.los, correlated.pitch, correlated.roll, correlated.accel-|y|, weighting.frames, filter, weighting, despike, correlated.subarrays, correlated.gradients, correlated.bias, correlated.series, correlated.mux, correlated.rows, source

# Specify the unit of the raw data
dataunits = count

unit = count

# The gain conversion to readout units
gain = -1.0

# The appropriate Jy/K conversion value (assuming 2.5m, 95% forward eff.)
K2Jy = 582

# Shift data relative to coordinates by the specified amount (seconds).
shift = -0.014

# Map even if many channels are flagged
mappingfraction = 0.2

# Use the faster maximum-likelihood estimation from the start...
estimator = maximum-likelihood

# 1/f stability timescale in seconds
stability = 5.0

forget = write.png, write.eps, skydip
blacklist = calibrated

# Use neighbor-based de-spiking all the way...
lock = neighbors

intcalfreq = {?fits.DIAG_HZ}

# Assumes sign of source signals +, -, or 0
[source]
    sign = +
    [[coupling]]
        s2n = 5.0:500.0

# starting Oct 2016 run, assume real-time object coordinates (rtoc) are
# recorded in the FITS for all sources, regardless of whether they are
# sidereal or not.
[rtoc]
    value = True

[subscan]
    # The minimum length of a valid scan in seconds.
    minlength = 5.0

[fits]

    # Additional header keys to migrate into product headers from earliest
    # scan...
    addkeys = SCRIPTID, OBSMODE, CALMODE, MCEMAP, HWPSTART, HWPINIT, NHWP, CHPONFPA, DTHSCALE

[chopper]
    # Shift chopper data to align with detectors
    shift = 2

    # Set a tolerance (arcsec) for the chopper signal. It has to be within the
    # nominal amplitude value for the frame to be used. This is useful to avoid
    # smearing when reducing chopped data...
    tolerance = 10

[vclip]
    # Discard slow scanning frames with entirely (instead of just
    # flagging them).
    [[strict]]
        value = True

[gyrocorrect]
    # Set a limit to what's the largest gyro drift that can be corrected...
    # (in arcsec)
    max = 30

[drifts]
    # Set the initial 1/f timescale..
    value = 30

[flag]
    # Flag some MUX lines that seem to be always bad...
    mux = 6, 20, 24, 27, 32, 46-49, 56, 70, 86
    # Flag rows that seem always bad
    row = 14, 15, 19, 52, 82, 83, 87

[rotation]
    # The overall rotation of the array from SOFSCAN x,y coordinates to SI x,y.
    value = 0.1
    # The relative rotations of the subarrays.
    R0 = 0.0
    R1 = 180.0
    T0 = 0.5

[offset]
    # Subarray offsets (in channels)
    R0 = 0.0, 0.0
    R1 = 67.03, 39.0
    T0 = 0.5, -0.5

[zoom]
    # zoom constants (T vs R)
    T = 1.0

[weighting]
    # Flag channels outside an acceptable range of relative noise levels
    noiserange = 0.3:3.0

[array]
    # The range of acceptable relative sky-noise gains.
    gainrange = 0.3:30.0
    [[signed]]
        value = True

[biaslines]
    # Decorrelated on TES bias lines
    value = True
    gainrange = 0.3:3.0

[series]
    [[nogains]]
        value = True

[mux]
    # Decorrelate on SQUID multiplexed channels
    gainrange = 0.3:3.0
    [[nogains]]
        value = True

[rows]
    # Decorrelate on detector rows (i.e. MUX address lines)
    gainrange = 0.3:3.0

[drp]
    # Various options for the DRP messaging service...
    host = 127.0.0.1
    port = 50747
    id = hawc.pipe.step.crush
    fifo = 100
    timeout = 1.0
    [[timestamp]]
        value = True

[tau]
    # Use's ATRAN-based polynomial model for calculating opacity...
    value = atran

    # Use the measured PWV to calculate tau...
    # value = pwv

    # Calculate typical PWV values, instead of using the monitor data
    # value = pwvmodel

    # Set tau to 0; turn off calibration
    # value = 0.0

    # Refer opacity relations to the PWV value (which is recorded)
    [[pwv]]
        a = 1.0
        b = 0.0

[skydip]
    # Fit skydips on restricted elevation range only...
    elrange = 0:55

[notch]
    width = 0.03
    harmonics = 35

[obslog]
    # logging...
    format = date\t flight\t scanno\t band\t object\t ?skydip\t obsmins(f1)\t chop.flag\t gyro.max(f1)\t ac.altkft(f1)\t tel.el(f1)\t env.pwv(f1)\t env.tamb(f1)\t dfoc(f1)

# Date is like conditionals
[date]
    [[*--2016-07-01]]
        add = apr2016

    [[2016-09-01--2016-11-01]]
        add = oct2016

    [[2016-11-30--2016-12-20]]
        add = dec2016

    [[*--2016-12-01]]
        [[[conditionals]]]
            [[[[tau.pwv]]]]
                # Use this model, whenever the pwv values aren't available or
                # cannot be trusted...
                add = tau.pwvmodel

    [[2016-12-03--2016-12-04]]
        [[[conditionals]]]
            [[[[tau.pwv]]]]
                add = tau.pwvmodel

    [[*--2017-05-01]]
        jumpdata = {?configpath}/hawc_plus/flux_jump_FS13_v1.fits.gz

    [[2017-05-01--2017-06-01]]
        add = may2017

    [[*--2017-10-01]]
        rotation.rotation = 0.9
        rotation.T0 = -0.5
        offset.T0 = 0.18,-0.17

    [[2017-10-01--2017-12-01]]
        add = oct2017

    [[2018-01-01--2018-07-16]]
        add = oc6i

    [[2018-07-17--2018-11-01]]
        add = oc6k

    [[*--2018-10-20]]
        flag.row = 2, 19, 52, 82, 83, 87, 114, 122, 65, 69, 77
        flag.mux = 6, 20, 24, 27-34, 40, 46-48, 50, 63, 70, 86

    [[2019-01-01--2019-03-01]]
        add = oc6t

    [[2019-03-02--2019-08-01]]
        add = oc7e

    [[2019-08-02--2019-10-15]]
        add = oc7f

[conditionals]

    # If dealing with demodulated data, then load the appropriate
    # settings for reducing it
    [[fits.PRODTYPE=demod]]
        config = hawc_plus/demod.cfg

    [[peakflux]]
        scale = 1.18

    [[fits.SIBS_X=15.5]]
        # Select specific subarrays only. E.g. if pointing to the center of R0,
        # then reduce R0/T0 only...
        subarray = T0, R0
        # subarray = T0

    # Reduce skydips if OBSMODE, CALMODE or DIAGMODE is set to SKYDIP
    [[fits.DIAGMODE=SKYDIP]]
        add = skydip

    [[fits.OBSMODE=SkyDip]]
        add = skydip

    # Set the observing band based on the SPECTEL1 header value
    [[fits.SPECTEL1=HAW_A]]
        band = A

    [[fits.SPECTEL1=HAW_B]]
        band = B

    [[fits.SPECTEL1=HAW_C]]
        band = C

    [[fits.SPECTEL1=HAW_D]]
        band = D

    [[fits.SPECTEL1=HAW_E]]
        band = E

    [[source.type=skydip]]
        # Reduce skydips with R0 only (least non-linear)
        subarray = R0
        # For skydips, notch out the intcal signal (203.25 Hz / 68 --
        # and harmonics)
        add = notch
        lock = subarray

    [[chopped]]
        # Allow velocity clip for chopped data (mapping mode)
        recall = vclip
        # For chopped data, remove the chopper-induced correlated signals...
        add = correlated.chopper-x, correlated.chopper-y

    # When using non-linear response corrections, make sure the drift window
    # covers the entire scan...
    [[correlated.nonlinearity]]
        drifts = max

    [[extended]]
        stability = 10.0

    # Use shorter 'stability' timescale for short scans, such as focus scans,
    # to get the crispest possible images...
    [[obstime<45]]
        stability = 2.5

    [[may2017]]
        jumpdata = {?configpath}/hawc_plus/flux_jump_FS14_v1.fits.gz

    [[oct2017]]
        jumpdata = {?configpath}/hawc_plus/flux_jump_FS15_v3.fits.gz
        # Apply correction for gyro drifts
        add = gyrocorrect

    [[sourcegains]]
        # If the couplings are merged into the correlated gains, then do not
        # decorrelate on sky separately...
        blacklist = sky

    # Previously weird intcalfreq = fits.DIAG_HZ, then transfered to this
    [[fits.DIAG_HZ!=-9999.0]]
        notch.frequencies = fits.DIAG_HZ

    # Load date-based configuration overrides...
    [[apr2016]]
        config = hawc_plus/2016-04.cfg

    [[oct2016]]
        config = hawc_plus/2016-10.cfg

    # Load the appropriate configuration for each band
    [[band=A]]
        config = hawc_plus/band-A.cfg

    [[band=B]]
        config = hawc_plus/band-B.cfg

    [[band=C]]
        config = hawc_plus/band-C.cfg

    [[band=D]]
        config = hawc_plus/band-D.cfg

    [[band=E]]
        config = hawc_plus/band-E.cfg

    # If pixel data was loaded from a previous band
    [[pixeldata]]
        # Decorrelate sky signal (separated from temperature signal)
        add = sky

    # Never segment scans if using them for determining flatfields.
    [[write.flatfield]]
        blacklist = segment

[aliases]
    # Define various shorthands for decorrelations
    pols = correlated.polarrays
    subs = correlated.subarrays
    biaslines = correlated.bias
    mux = correlated.mux
    rows = correlated.rows
    series = correlated.series
    accel = correlated.accel-|y|
    los = correlated.los
    roll = correlated.roll
    gradients = correlated.gradients

[iteration]
    [[-2]]
        # Decorrelate on the series arrays (heat-sinking)
        add = series

    [[-1]]
        [[[conditionals]]]
            # Never smooth focus scans...
            [[[[fits.CALMODE=Focus]]]]
                blacklist = smooth
