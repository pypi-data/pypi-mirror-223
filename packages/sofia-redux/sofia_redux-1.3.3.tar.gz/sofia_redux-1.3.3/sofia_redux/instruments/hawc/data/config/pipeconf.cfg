# HAWC Pipeline Base Configuration File
#
# This file contains all settings for reducing HAWC science and
# in-flight diagnostic data. It is intended to be used with
# additional delta configuration files.
#
# DO NOT edit this file without consulting with the HAWC data
# reduction team.

#### Basic Settings ####
#=======================

# Data Section: information on data objects and file names
[data]
    # Regexp for part of the filename before the file step identifier
    filenamebegin = '\A((\d.+)|(F[\dX]{3,4}_HA_[A-Za-z]+_[A-Za-z0-9]+_[A-Za-z0-9]+))_'
    filenameend = '_((\d+-)?\d+)(?:_BIN\d+)?\.fits(\.gz)?\Z' # HAWC+
    filenum = '(?:\A.*(?:(?:F\d{3,4})|(?:XXXX))_((?:\d+-)?\d+)_.*\.fits(?:\.gz)?\Z)|(?:\AF[\dX]{3,4}_HA.*_((?:\d+-)?\d+)(?:_BIN\d+)?\.fits(?:\.gz)?\Z)'
    dataobjects = DataFits, DataText #, DataCsv


#### PIPE MODES ####
#===================
# configuration for individual pipeline modes. Each needs:
# - datakeys: List of keyword=values required in file header to select this pipeline mode
#             Format is: Keyword=Value|Keyword=Value|Keyword=Value
# - stepslist: List of pipesteps to run the data through


# Lab polarimetry data -- match this first, since it depends
# on a specific CMTFILE only
[mode_labpol]
    datakeys = 'CMTFILE=Hawc_Take data at HWP positions.txt'
    # list of steps
    stepslist = StepCheckhead, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepPolVec, StepRegion, StepLabPolPlots
    # change stepprepare to labmode
    [[checkhead]]
        abort = False
    [[prepare]]
        labmode = True
        colrename = 'crioTTLChopOut->Chop Offset|AZ_Error->Azimuth Error|EL_Error->Elevation Error|AZ->Azimuth|EL->Elevation|SIBS_VPA->Array VPA'
        chpoffsofiaRS = False
    [[demodulate]]
        track_tol = -1
    [[dmdcut]]
        mask_bits = 64
    [[flat]]
        labmode = True
    [[wcs]]
        labmode = True
        save = True
    [[region]]
        save = True
    [[header]]
        NODPATT = "'A' / Nod Pattern"
        CHPFREQ = 2.988 / Chop Frequency

# lab noise data
[mode_noisedata]
    datakeys = 'CALMODE=NOISE'
    # list of steps
    stepslist = StepCheckhead, StepPrepare, StepNoiseFFT, StepNoisePlots
    # change stepprepare to labmode
    [[checkhead]]
        abort = False
    [[prepare]]
        labmode = True
        colrename = 'crioTTLChopOut->Chop Offset|AZ_Error->Azimuth Error|EL_Error->Elevation Error|AZ->Azimuth|EL->Elevation|SIBS_VPA->Array VPA'
        chpoffsofiaRS = False
    [[header]]
        NODPATT = "'A' / Nod Pattern"
        CHPFREQ = 2.988 / Chop Frequency
        NHWP     = "1 / Number of HWP angles"

# Other lab data
[mode_labdata]
    datakeys = 'INSTMODE=C2N (NMC)|CHPSRC=internal|CALMODE=UNKNOWN'
    # list of steps
    stepslist = StepCheckhead, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepLabChop, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepMerge
    # change stepprepare to labmode
    [[checkhead]]
        abort = False
    [[prepare]]
        labmode = True
        colrename = 'crioTTLChopOut->Chop Offset|AZ_Error->Azimuth Error|EL_Error->Elevation Error|AZ->Azimuth|EL->Elevation|SIBS_VPA->Array VPA'
        chpoffsofiaRS = False
    [[demodulate]]
        track_tol = -1
    [[dmdcut]]
        mask_bits = 64
    [[flat]]
        labmode = True
    [[labchop]]
        save = True
    [[wcs]]
        labmode = True
        save = True
    [[header]]
        NODPATT = "'A' / Nod Pattern"
        CHPFREQ = 2.988 / Chop Frequency
        NHWP     = "1 / Number of HWP angles"

# PolMap step, for generating png file only
[mode_polmap]
    datakeys = 'PRODTYPE = polmap'
    stepslist = StepPolMap,
    [[polmap]]
        save = False

# Mode for Internal Calibrator File to generate flats
[mode_intcal]
    datakeys ='CALMODE=INT_CAL'
    # list of steps
    stepslist = StepCheckhead, StepFluxjump, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepMkflat
    # Always attempt to continue reduction
    [[checkhead]]
        abort = False
    # Stepprepare change to labmode and get Chop Offset from crioAnalogChopOut
    [[prepare]]
        labmode=True
        colrename = 'crioAnalogChopOut -> Chop Offset|AZ_Error->Azimuth Error|EL_Error->Elevation Error|AZ->Azimuth|EL->Elevation|SIBS_VPA->Array VPA'
        chpoffsofiars = False
    # Change demodulation options
    [[demodulate]]
        l0method = 'RE'
        phasefile = 0.0
        checkhwp = False
        track_tol = -1
    [[dmdcut]]
        mask_bits = 64
    # Change header value NODPATT = A
    [[header]]
        NODPATT  = "'A' / Nod Pattern"

# SKYDIP data
[mode_skydip]
    datakeys = 'INSTCFG=TOTAL_INTENSITY|CALMODE=SKY_DIP'
    # list of steps
    stepslist = StepCheckhead, StepScanMap, StepFluxjump, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepSkydip
    # Always attempt to continue reduction
    [[checkhead]]
        abort = False
    # ScanMap - no output
    [[scanmap]]
        noout = True
        save = False
    # Stepprepare change to labmode and get Chop Offset from crioAnalogChopOut
    [[prepare]]
        labmode=True
        colrename = 'crioAnalogChopOut -> Chop Offset|AZ_Error->Azimuth Error|EL_Error->Elevation Error|AZ->Azimuth|EL->Elevation|SIBS_VPA->Array VPA'
        chpoffsofiaRS = False
    # Change demodulation options
    [[demodulate]]
        l0method = 'ABS'
        track_tol = -1
        track_extra = 0,0
    [[dmdcut]]
        mask_bits = 64
    [[header]]
        NODPATT  = "'A' / Nod Pattern"

# POLDIP data
[mode_poldip]
    datakeys = 'INSTCFG=POLARIZATION|CALMODE=SKY_DIP'
    stepslist = StepCheckhead, StepFluxjump, StepPrepare, StepPolDip
    # Always attempt to continue reduction
    [[checkhead]]
        abort = False
    [[prepare]]
        traceshift = 4

# AUTOFOCUS: Mode for Automatic Focusing for Scan data
[mode_autofocus]
    datakeys = 'INSTMODE=OTFMAP|INSTCFG=TOTAL_INTENSITY|CALMODE=FOCUS'
    # list of steps
    stepslist = StepCheckhead, StepScanMapFocus, StepStdPhotCal, StepFocus, StepImgMap
    [[scanmap]]
        use_frames = ''

# ChopNod Mode Configuration
[mode_nod_std_dmd]
    datakeys = 'INSTMODE=C2N (NMC)|INSTCFG=TOTAL_INTENSITY|OBSTYPE=STANDARD_FLUX|PRODTYPE=demodulate'
    stepslist = StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepOpacity, StepBgSubtract, StepMerge, StepStdPhotCal, StepImgMap
[mode_nod_std]
    datakeys = 'INSTMODE = C2N (NMC)|INSTCFG = TOTAL_INTENSITY|OBSTYPE=STANDARD_FLUX'
    # list of steps
    stepslist = StepCheckhead, StepFluxjump, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepOpacity, StepBgSubtract, StepMerge, StepStdPhotCal, StepImgMap
    [[demodulate]]
        checkhwp = False
[mode_nod_dmd]
    datakeys = 'INSTMODE = C2N (NMC)|INSTCFG = TOTAL_INTENSITY|PRODTYPE = demodulate'
    stepslist = StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepOpacity, StepBgSubtract, StepMerge, StepCalibrate, StepImgMap
[mode_nod]
    datakeys = 'INSTMODE = C2N (NMC)|INSTCFG = TOTAL_INTENSITY'
    # list of steps
    stepslist = StepCheckhead, StepFluxjump, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepOpacity, StepBgSubtract, StepMerge, StepCalibrate, StepImgMap
    [[demodulate]]
        checkhwp = False

# Nod-Pol Mode Configuration
[mode_nodpol_dmd_std]
    datakeys = 'INSTMODE=C2N (NMC)|INSTCFG=POLARIZATION|OBSTYPE=STANDARD_FLUX|PRODTYPE=demodulate'
    stepslist = StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepIP, StepRotate, StepOpacity, StepBgSubtract, StepMerge, StepStdPhotCal, StepPolVec, StepRegion, StepPolMap
[mode_nodpol_std]
    datakeys = 'INSTMODE=C2N (NMC)|INSTCFG=POLARIZATION|OBSTYPE=STANDARD_FLUX'
    # list of steps
    stepslist = StepCheckhead, StepFluxjump, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepIP, StepRotate, StepOpacity, StepBgSubtract, StepMerge, StepStdPhotCal, StepPolVec, StepRegion, StepPolMap
[mode_nodpol_dmd]
    datakeys = 'INSTMODE = C2N (NMC)|INSTCFG = POLARIZATION|PRODTYPE = demodulate'
    stepslist = StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepIP, StepRotate, StepOpacity, StepCalibrate, StepBgSubtract, StepMerge, StepPolVec, StepRegion, StepPolMap
[mode_nodpol]
    datakeys = 'INSTMODE = C2N (NMC)|INSTCFG = POLARIZATION'
    # list of steps
    stepslist = StepCheckhead, StepFluxjump, StepPrepare, StepDemodulate, StepDmdPlot, StepDmdCut, StepFlat, StepShift, StepSplit, StepCombine, StepNodPolSub, StepStokes, StepWcs, StepIP, StepRotate, StepOpacity, StepCalibrate, StepBgSubtract, StepMerge, StepPolVec, StepRegion, StepPolMap

# Flux standards configuration
[mode_scan_std]
    datakeys = 'INSTMODE=OTFMAP|INSTCFG=TOTAL_INTENSITY|OBSTYPE=STANDARD_FLUX'
    stepslist = StepCheckhead, StepScanMap, StepStdPhotCal, StepImgMap

[mode_scanpol_std]
    datakeys = 'INSTMODE=OTFMAP|INSTCFG=POLARIZATION|OBSTYPE=STANDARD_FLUX'
    stepslist = StepCheckhead, StepScanMapPol, StepScanStokes, StepIP, StepRotate, StepStdPhotCal, StepMerge, StepPolVec, StepRegion, StepPolMap, StepImgMap
    [[ip]]
        fileip = uniform
    # beam size pixels for scanpol
    #[[merge]]
    #    cdelt = 4.84, 7.80, 7.80, 13.6, 18.2  # Pixel size in arcseconds of output map. cdelt = beamsize
    #    fwhm = 4.84, 7.80, 7.80, 13.6, 18.2 # smoothing FWHM: beam size
    #    radius = 14.52, 23.4, 23.4, 40.8, 54.6 # fit window: beam size * 3

# Imaging Scan Mode Configuration
[mode_scan]
    datakeys = 'INSTMODE=OTFMAP|INSTCFG=TOTAL_INTENSITY'
    stepslist = StepCheckhead, StepScanMap, StepZeroLevel, StepCalibrate, StepImgMap

# Scanning Polarimetry Mode Configuration
[mode_scanpol]
    datakeys = 'INSTMODE=OTFMAP|INSTCFG=POLARIZATION'
    stepslist = StepCheckhead, StepScanMapPol, StepScanStokes, StepIP, StepRotate, StepCalibrate, StepMerge, StepPolVec, StepRegion, StepPolMap
    [[ip]]
        fileip = uniform
    # beam size pixels for scanpol
    #[[merge]]
    #    cdelt = 4.84, 7.80, 7.80, 13.6, 18.2  # Pixel size in arcseconds of output map. cdelt = beamsize
    #    fwhm = 4.84, 7.80, 7.80, 13.6, 18.2 # smoothing FWHM: beam size
    #    radius = 14.52, 23.4, 23.4, 40.8, 54.6 # fit window: beam size * 3

# Skyflat mode configuration: this mode does not uniquely match any
# input data.  It needs to be selected manually.
[mode_skycal]
    datakeys = 'INSTMODE=OTFMAP|INSTCFG=TOTAL_INTENSITY'
    # list of steps
    stepslist = StepCheckhead, StepScanMapFlat, StepSkycal


#### PIPE STEPS ####
#====================
#   All HAWC steps in alphabetical order.

# BINPIXELS
[binpixels]
    block_size = 1  # binning size: 2, 4, or 8.  Set <= 1 to turn off.

# BGSUBTRACT - background subtraction step
[bgsubtract]
    cdelt = 2.57, 4.02, 4.02, 6.93, 9.43 # output pixel size: detector pixscale
    proj = TAN # Projection of output map
    sizelimit = 3000 # Upper limit on map size (either axis, in pixels)
    fwhm = 4.84, 7.80, 7.80, 13.6, 18.2 # smoothing FWHM: beam size
    radius = 9.68, 15.6, 15.6, 27.2, 36.4 # fit window: beam size * 2
    errflag = True   # Use uncertainties when computing averages?
    widowstokesi = True   # Use widow pixels (flagged 1 or 2) when smoothing
    edge_threshold = 0.5   # Set edge pixels to NaN
    fit_order = 0 # Fit order for local regression
    bgoffset = 10 # Number of iterations of background subtract with offset (intercept) term
    chauvenet = True   # Use Chauvenet's criterion in background subtraction?
    fitflag = False   # Use errors in intensity when fitting?
    qubgsubtract = True # Apply background offsets to individual Stokes QU files?

# CALIBRATE - fluxes from data units to Jy/pixel
[calibrate]

# COMBINE - R-T and R+T data
[combine]
    sigma = 3.0   # Reject outliers more than this many sigma from the mean
    sum_sigma = 4.0  # Reject additional R+T outliers more than sum_sigma from the mean
    use_error = False # Set to True to use Chauvenet output errors rather than propagating input variances

# Check the primary FITS header for required keywords
[checkhead]
    abort = True
    headerdef = $DPS_HAWCPIPE/data/config/header_req_config.cfg

# DEMODULATE -  Demodulate the chopped data while keeping all samples
[demodulate]
    chop_tol = 0.2   # chopper tolerance in arcseconds
    nod_tol = 5.0   # nod tolerance in arcseconds
    hwp_tol = 2.   # hwp angle tolerance in degrees
    az_tol = 5000000.0   # Azimuth error tolerance in arcseconds
    el_tol = 5000000.0  # Elevation error tolerance in arcseconds
    track_tol = 'centroidexp'    # Track error tolerance in arcseconds (AOIs 3 and 4) - set negative to deactivate
    track_extra = 0, 0  # Extra samples removed (in seconds) before and after samples flagged by track_tol
    chopphase = True   # Flag requiring chop phase correction
    checkhwp = True  # Set FALSE to avoid check expected number of HWP angles
    phasefile = $DPS_HAWCPIPE/data/phasefiles/masterphase_170307.fits
    phaseoffset = 0.0 # Offset to apply to phasefile, in degrees
    l0method = 'RE' # Method to normalize data: REal, IMag and ABSolute
    boxfilter = -1 # Box Highpass Filter. -1 = frequency from the header
    chopavg = True # Flag to save chop averaged raw data (default = False)
    tracksampcut = 0.5 # If fraction of all samples removed due to tracking is larger than this number, than tracking status is BAD
    data_sigma = 5.0 # value for sigma-clipping of detector data in variance calculation

# DMDCUT - Discard chops based from the Demodulate output
[dmdcut]
    mask_bits = 1023   # bits of 'Chop Mask' on which to discard chops
    min_samples = 1  # minimum number of samples for retaining a chop

# DMDPLOT - Plot output of Demodulate
[dmdplot]
    door_threshold = 2.0          # ratio of imaginary to real median stds for door vignetting
    detector_i = 14               # i-location of detector pixel to plot
    detector_j = 24               # j-location of detector pixel to plot
    data_sigma = 5.0              # value for sigma-clipping of detector data
    data_iters = 3                # number of iterations for data clipping
    user_freq = 10.2              # INT_CAL: user frequency in Hz
    ref_phase_file = $DPS_HAWCPIPE/data/phasefiles/refphases_180419.fits
    phase_thresh = 50.0           # threshold in phase uncertainty (deg) for blanking pixels
    save_phase = False            # Save phase images to PHS suffix
    savefolder = ''               # Folder to save plots to. '' means same as input file

# FLAT - step configuration
[flat]
    # filename glob to find the flat files
    flatfile = flats/*OFT*.fits
    # list of keys that need to match flat and data file (only if flatfile=search)
    flatfitkeys = 'SPECTEL1', 'MISSN-ID', 'FILEGPID', 'SCRIPTID'
    # Back up filename for auxiliary file(s). Can contain * and ? wildcards to match
    # multiple files to be selected using fitkeys (default = bkupflatfile/*.fits)
    bkupflat = $DPS_HAWCPIPE/data/flats/*OFT.fits  # Backup flat files

# FLUXJUMP - Flux Jump step configuration
[fluxjump]
    # Filepathname specifying the jump gap map, alternatively a number for the
    #   gap to be used for all pixels (default = '4600')
    # Default is a no-op map
    jumpmap = $DPS_HAWCPIPE/data/fluxjumps/flux_jump_dummy.fits

# FOCUS - step configuration
[focus]
    widowisgood = True       # Include widow pixels in the analysis (T) or only good pixels (F, will assume widow pixels are bad)
    medianaverage = True     # Run a median average box through the array to fill bad pixels (T) or not (F)
    boxaverage = 5           # Size of the median average box (if medianaverage is True) in pixels
    autocrop = True          # Crop image automatically around the target (w/ boxsize = 1/3 of image size)
    cropimage = True         # Crop portion (box) of the image for analysis? True or False
    xyboxcent = 87,87       # If cropimage = True, central X/Y pixel position of the box to be cropped
    boxsizecrop = 30         # If cropimage = True, size of the box to be cropped (in pixels)
    primaryimg = ''          # Specifies which image will be used for the Gaussian fit. If left blank, the first image will be used.

# IMGMAP - Image map step
[imgmap]
   maphdu = 'STOKES I'         # HDU name to be used in the mapfile. The HDU used for the background image.
   lowhighscale = 0.25, 99.75  # Low/High percentile for image scaling
   colormap = 'plasma'
   ncontours = 0               # Number of contours
   fillcontours = True
   colorcontour = 'gray'
   grid = False
   title = 'info'              # Title in the polarization map
   centercrop = False          # Crop a region of the image. Default = False. Inputs: RA, DEC, width, height in degrees.
   watermark = ''       # Text to add to the plot as a watermark

# IP Correction for instrumental polarization step configuration
[ip]
    # IP from planets estimated using FS13.
    #qinst =  -0.0154, 0.0, -0.0151, 0.0028, -0.0129   # Fractional instrumental polarization in q
    #uinst =  -0.0030, 0.0,  0.0090,  0.0191, -0.0111  # Fractional instrumental polarization in u
    # Median q/u from below file
    qinst =  -0.0157, 0.0, -0.0164, 0.0009, -0.0104
    uinst =  -0.0038, 0.0,  0.0081, 0.0192, -0.0142
    # IP file from FS15 poldip
    fileip = $DPS_HAWCPIPE/data/ip/hawc_ip_FS15_poldip_v1.fits

# MERGE - step configuration
[merge]
    beamsize = 4.84, 7.80, 7.80, 13.6, 18.2 # Beam FWHM size (arcsec) to write into BMAJ/BMIN header keywords
    cdelt  =  1.21, 1.95, 1.95, 3.40, 4.55  # Pixel size in arcseconds of output map. cdelt = beamsize/4
    proj = TAN   # Projection of output map
    sizelimit = 3000 # Upper limit on map size (either axis, in pixels)
    widowstokesi = True   # Use widow pixels to compute Stokes I map
    conserveflux = True    # Apply flux conservation factor due to change in pixel size to all output images
    fit_order = 2  # Fit order for local regression
    fwhm = 4.84, 7.80, 7.80, 13.6, 18.2 # smoothing FWHM: beam size / 2
    radius = 9.68, 15.6, 15.6, 27.2, 36.4 # fit window: beam size * 2
    errflag = True   # Use uncertainties when computing averages
    edge_threshold = 0.5   # Set edge pixels to NaN
    adaptive_algorithm = scaled  # Adaptive smoothing kernel type (scaled, shaped, None)
    fit_threshold = 0.0  # Deviation from weighted mean to allow for higher order fit
    bin_cdelt = True # if input pixels have been binned, multiply the cdelt and radius by the binning factor

# MKFLAT - Make flat file from INT_CAL files
[mkflat]
    # Path for the folder to write flat files to (default: .)
    flatoutfolder = flats
    # Header Keyword to match input files to the same observation (default: FILEGPID)
    groupkey = "SCRIPTID"
    # Chops to exclude from the beginning of the file (default: 1)
    skip_start = 1
    # Chops to exclude from the end of the file (default: 1)
    skip_end = 1
    # Raw data threshold for dead pixels (default: 10.0)
    bad_dead = 10.0
    # Raw data threshold for ramping pixels (default: 2000000.0)
    bad_ramping = 2000000
    # Threshold for HIGH STD of DMD SIGNAL to exclude pixels (default: 10.0)
    normstd = 10.0
    # Threshold to eliminate pixels with LOW SIGNAL (default: [0.5, 0.5, 0.5])
    ynormlowlim = 0.5, 0.5, 0.5
    # Threshold to eliminate pixels with HIGH NORMALIZED SIGNAL
    # (default: [10.0, 10.0, 10.0])
    ynormhighlim = 10.0, 10.0, 10.0
    # Scale factor for T/R flatfield (default: 2.0)
    TtoR = 2.0
    # Filename for auxiliary file(s). Can contain * and ? wildcards to match
    # multiple files to be selected using fitkeys (default = skycal/*.fits)
    # (default: skycal/*SCAL.fits)
    scalfile = $DPS_HAWCPIPE/data/skycals/fs15/*.fits
    # Back up filename for auxiliary file(s). Can contain * and ? wildcards
    # to match multiple files to be selected using fitkeys
    bkupscal = $DPS_HAWCPIPE/data/skycals/fs15/*.fits
    # List of header keys that need to match auxiliary data file
    # - only used if multiple files match skycal (default = [])
    scalfitkeys = SPECTEL1

# NODPOLSUB - Subtract L and R nods with HWP
[nodpolsub]

# NOISE FFT and plots
[noisefft]
   truncate = True

[noiseplots]

# OPACITY - Correction for model atmospheric opacity
[opacity]

# POLDIP - Polarization skydip step
[poldip]
   hwp0 = 5.0 # Reference HWP angle
   temp0 = 0.532 # Reference temperature (ADR setpoint)
   maxrms = 0.1 # Maximum allowed reduced RMS

# POLMAP - Polarization map step
[polmap]
   maphdu = 'STOKES I'        # HDU name to be used in the mapfile. The HDU used for the background image.
   scalevec = 0.0003          # Scale factor for vector sizes
   scale = True               # Set to False to make all vectors the same length
   rotate = True              # True gives (B-Field) vectors
   debias = True              # Use debiased polarizations
   lowhighscale = 0.25,99.75  # Low/High percentile for image scaling
   colorvec = 'black'         # Vector colors
   colormap = 'plasma'
   ncontours = 20             # Number of contours
   fillcontours = True
   colorcontour = 'gray'
   grid = True
   title = 'info'             # Title in the polarization map
   centercrop = False         # Crop a region of the image. Default = False. Inputs: RA, DEC, width, height in degrees.
   watermark = 'Preview'      # Text to add to the plot as a watermark
   save = True

# POLVEC - Polarization vector step configuration
[polvec]
    # telescope polarization efficiency
    eff = 0.842, 0.9, 0.939, 0.975, 0.978

# PREPARE - Prepare file for demodulation
[prepare]
    detcounts = 'SQ1Feedback'# Name of the column containing the detector flux values R/T arrays
    hwpcounts = 'hwpCounts'  # Name of the input fits column containing the HWP counts (only used if column "HWP Angle" is not present)
    hwpconv = 0.25           # Value to convert hwpcounts to HWP Angles (only used if column "HWP Angle" is not present)
    labmode = False          # If TRUE (processing lab data), will fill in with zeros a few columns and keywords that are important for the DRP
    replacenod = True # If TRUE will replace Nod Offset by calculation based on RA/DEC. If False use original column (has problems)
    chpoffsofiars = True     # If TRUE will calculate Chop Offset based on SofiaChopR/S. If False the user should use colrename to specify which column to use
    colrename = 'AZ_Error->Azimuth Error|EL_Error->Elevation Error|AZ->Azimuth|EL->Elevation|SIBS_VPA->Array VPA|NOD_OFF->Nod Offset Orig'
    # List of data columns to delete: The format ["column1","column2",...]
    coldelete = hwpA,hwpB,FluxJumps
    # Number of samples to shift the data (default is 0 i.e. no shift)
    traceshift = 0
    # List for PIXSCAL values for each band - to update PIXSCAL in the header
    pixscalist  = 2.57, 4.02, 4.02, 6.93, 9.43
    # Remove data Dropouts (i.e. data with RA==Dec==0)
    removedropouts = True

# REGION - Extract ds9 region file of polarization vectors
[region]
    skip = 2       # Only plot every ith pixel. If skip =1 it will show every pixel. If cdelt = beamsize/4, skip=2 gives Nyquist sampling.
    scale = True   # Set to False to make all vectors the same length
    rotate = True   # Use rotated (B-Field) vectors
    debias = True   # Use debiased polarizations
    length = 10.0   # Scale factor for length of polarization vectors in pixels.
    mini = 0.0   # Do not plot vectors with flux < this fraction of peak flux
    minp = 0.0   # Require percentage polarizations to be >= this value
    offset = 0, 0   # Offset in pixels in x,y (controls which pixels are extracted)
    sigma = 3.0   # p/sigmap must be >= this value
    minisigi = 200  # StokesI/ErrorI must be above this value
    maxp = 50  # Pol. Degree must be below this value

# ROTATE - Rotate Q and U from detector to sky frame step configuration
[rotate]
    gridangle = -89.69, 0.0, -104.28, 37.42, 119.62  #Angle of the grid in degrees (for each waveband)
    hwpzero_tol = 3.0   # Tolerance in the difference between commanded and actual initial HWP angles
    hwpzero_option = 'commanded'   # Option to use between "commanded" or "actual" in case the difference between the initial HWP angles is > hwpzero_tol

# Run the scanmap image data reduction
[scanmap]
    save = True
    options = ''
    subarray = 'R0,T0,R1'
    use_frames = '800:-800'
    grid = ''

# Use scanmap to generate a flat
[scanmapflat]
    save = True
    options = ''
    use_frames = '800:-800'

# ScanMapFOCUS - Run scanmap on focus groups
[scanmapfocus]
    save = True
    groupkeys = 'FOCUS_ST'  # header keywords to decide data group membership (| separated)
    groupkfmt = '%.1f'   # group key formats to force string comparison (| separated)

# Run the scanmap pol data reduction
[scanmappol]
    save = True
    save_intermediate = False
    options = ''
    vpa_tol = 5.0
    use_frames = '800:-800'
    grid = ''

# SCANSTOKES - Calculate Stokes parameters for scanpol data
[scanstokes]
    hwp_tol = 5.0   # HWP angles for Stokes parameters must differ by no more than 45+-hwp_tol degrees
    zero_level_method = median # Statistic for zero-level calculation (mean, median, none)
    zero_level_radius = 9.68, 15.6, 15.6, 27.2, 36.4 # 2 * Beam FWHM size radius for averaging
    zero_level_sigma = 5.0   # Sigma value for statistics clipping in non-auto mode
    zero_level_region = auto # Zero level region method (header, auto, or [RA, Dec, radius] in degrees)

# SHIFT - Account for R/T misalignment and apply integer displacements (shifts)
[shift]
    angle1   = 0.0       # rotation angle of R1 relative to T1, in degrees counterclockwise
    angle2   = 0.0       # rotation angle of R2 relative to T2, in degrees counterclockwise
    mag      = 1.0, 1.0  # Magnification of R relative to T, in the x,y pixel direction
    disp1    = 0.0, 0.0  # Pixel displacement of R1 relative to T1, in the x,y directions
    disp2    = 0.0, 0.0  # Pixel displacement of R2 relative to T2, in the x,y directions
    gapx     = 4.0       # displacement in x pixels between T1 and T2
    gapy     = 0.0       # displacement in y pixels between T1 and T2
    gapangle = 0.0       # Rotation angle in degrees CCW between T1 and T2

[skycal]
    normalize = False
    sigma_lower = 3.0
    sigma_upper = 3.0
    ttor = 1.275
    bins = 'fd'
    scalfitkeys = SPECTEL1
    dclfile = intcals/*DCL*.fits
    dclfitkeys = 'SPECTEL1', 'MISSN-ID', 'DATE-OBS'
    pixfile = pixel*.dat
    ref_pixpath = $DPS_HAWCPIPE/data/pixdata/
    ref_pixfile = pixel-A.170mK.F445.dat,'',pixel-C.170mK.F446.dat,pixel-D.170mK.F445.dat,pixel-E.170mK.F446.dat

# SPLIT - Split data by HWP angle and nod position step configuration
[split]
    # Nod tolerance, as the percent difference allowed in number of chop cycles
    # between 1st and 2nd left, and between left and right
    nod_tol = 50.0

# STDPHOTCAL - Run photometry on standards and calibrate to Jy
[stdphotcal]

# STOKES - Compute Stokes I, Q, U step configuration
[stokes]
    hwp_tol = 5.0   # HWP angles for Stokes parameters must differ by no more than 45+-hwp_tol degrees
    erri = median   # How to inflate errors in I.  Can be median, mean, or none.
    erripolmethod   = meansigma     # Options are "hwpstddev" or "meansigma"
    removeR1stokesi = True      # Remove R1 subarray for Stokes I
    override_hwp_order = False  # If True, the first two HWP angles will be used for Q, last two for U

# WCS - Update Parallactic angle and crval1 and crval2 for a single file
[wcs]
    add180vpa = True   # Add 180 degrees to the SIBS_VPA
    # Small Offset (in pixels along x/y) between SIBS_X/Y and actual target position
    offsibs_x = 0.0, 0.0, 0.0, 0.0, 0.0
    offsibs_y = 0.0, 0.0, 0.0, 0.0, 0.0
    labmode = False # If labmode = True, will ignore keywords and input parameters and create fake astrometry

# ZEROLEVEL - Correct zero level for scanning imaging mode
[zerolevel]
    zero_level_method = median # Statistic for zero-level calculation (mean, median, none)
    zero_level_radius = 9.68, 15.6, 15.6, 27.2, 36.4 # 2 * Beam FWHM size radius for averaging
    zero_level_sigma = 5.0   # Sigma value for statistics clipping in non-auto mode
    zero_level_region = auto # Zero level region method (header, auto, or [RA, Dec, radius] in degrees)


#### Data Section ####
#=====================

# Treatment of the FITS header: can include keyword replacement
# The keyword value and comment must be printed as they would in a FITS header
# If the value is another keyword, the value of that keyword will be used
# instead (This only works if the other keywords starts with an alphabetic
# character).
[header]
    #INSTMODE = "'test' / instrument mode"
    #CHPFREQ  = "10.0 / Chop Frequency"
    #SKYANGL  = 0.0 / Sky Angle
    #CHOPPING = T / Chopping flag
    #CHPMODE  = "'2-POINT' / Chopping mode"
    #CHPAMP1  = 30000 / Chop Amplitude
    #CHPANGLE = 0.0 / Chop Angle
    #DETSIZE  = "'(32,41)'"
    #NHWP     = "1 / Number of HWP angles"
    #NODDING  = T / Nodding flag
    #NODANGLE = 92.8 / Nod Angle
    #NODPATT  = "'ABBA' / Nod Pattern"
    #NODTIME  = 5.0 / Nod Integration Time
    #NODSETL  = 0.05 / Nod Settle Time
    #OBSRA    = 5000 / Observation RA (now DOG units)
    #OBSDEC   = 5000 / Observation DEC (now DOG units)
    #SCANNING = T / Scanning flag
    #TAUOBS = 0.0 / Estimated optical depth

# Merge Header Section: How to merge header keywords when headers from
# several files are merged. Options are:
# - FIRST (default), LAST: For all values
# - DEFAULT: For all values (-9999 for ints, UNKNOWN for strings, etc)
# - MIN, MAX, SUM: For numbers
# - AND, OR: For boolean flags
# - CONCATENATE: For strings
[headmerge]
    ALTI_END = LAST
    ASSC_AOR = CONCATENATE
    ASSC_MSN = CONCATENATE
    DTHINDEX = DEFAULT
    LAT_END  = LAST
    LON_END  = LAST
    FBC-STAT = LAST
    FOCUS_EN = LAST
    SIBS_X   = DEFAULT
    SIBS_Y   = DEFAULT
    UTCEND   = LAST
    WVZ_END  = LAST
    ZA_END   = LAST
    TRACERR  = OR
    TSC-STAT = LAST

# Treatment for table values when combining images
# Options are MIN, MED, AVG, FIRST, LAST, SUM
[table]
    samples           = SUM
    chop offset       = WTAVG
    nod offset        = WTAVG
    hwp angle         = WTAVG
    azimuth           = WTAVG
    azimuth error     = WTAVG
    elevation         = WTAVG
    elevation error   = WTAVG
    array vpa         = WTAVG
    nod index         = WTAVG
    hwp index         = WTAVG
    nod offset orig   = FIRST
    framecounter      = FIRST
    crioframenum      = WTAVG
    hwpcounts         = WTAVG
    fasthwpa          = WTAVG
    fasthwpb          = WTAVG
    fasthwpcounts     = WTAVG
    a2a               = WTAVG
    a2b               = WTAVG
    b2a               = WTAVG
    b2b               = WTAVG
    chop1             = WTAVG
    chop2             = WTAVG
    criottlchopout    = FIRST
    sofiachops        = WTAVG
    sofiachopr        = WTAVG
    sofiachopsync     = WTAVG
    ai22              = MED
    ai23              = MED
    crioanalogchopout = FIRST
    irigupdatediff    = FIRST
    timestamp         = WTAVG
    ra                = FIRST
    dec               = FIRST
    chop_vpa          = FIRST
    lon               = FIRST
    lat               = FIRST
    lst               = WTAVG
    los               = WTAVG
    xel               = WTAVG
    tabs_vpa          = FIRST
    pitch             = WTAVG
    roll              = WTAVG
    nonsiderealra     = WTAVG
    nonsiderealdec    = WTAVG
    flag              = WTAVG
    pwv               = FIRST
    nodpositionreached = FIRST
    trackerraoi3      = FIRST
    trackerraoi4      = FIRST
    trackerraoi5      = FIRST
    r array imag      = FIRST
    t array imag      = FIRST
    r array imag var  = FIRST
    t array imag var  = FIRST
    chop offset imag  = FIRST
    r array avg       = FIRST
    t array avg       = FIRST
    phase corr        = WTAVG
    nod_off           = WTAVG
    centroidexpmsec   = WTAVG
    # Centroid Values for FS15
    centroidworkphase = WTAVG
    centroidaoi       = FIRST
    # SofiaHK values (temporary)
    sofhkchopamp      = WTAVG
    sofhkbinning      = WTAVG
    sofhkaoi4col      = WTAVG
    sofhkaoi4row      = WTAVG
    sofhkaoi3col      = WTAVG
    sofhkaoi3row      = WTAVG
    sofhktrkaoi       = WTAVG
    sofhkseqphase     = WTAVG
    sofhkexptime      = WTAVG
    sofhkaoi4err      = WTAVG
    sofhkaoi3err      = WTAVG
    chop mask         = FIRST
