# Makefile for python interface for package pbc.
# File is generated by gopy. Do not edit.
# gopy build -name=pbc -rename -dynamic-link=true -output=odyssey_posbus_client github.com/momentum-xyz/posbus-client/pbc/compat github.com/momentum-xyz/ubercontroller/pkg/posbus github.com/momentum-xyz/ubercontroller/pkg/cmath

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/tmp/build-env-dtgknmgi/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/opt/python/cp310-cp310/include/python3.10
LDFLAGS = -L/opt/_internal/cpython-3.10.12/lib -lpython3.10 -lcrypt -lpthread -ldl  -lutil -lm -lm

all: gen build

gen:
	gopy gen -no-make -name=pbc -rename -dynamic-link=true github.com/momentum-xyz/posbus-client/pbc/compat github.com/momentum-xyz/ubercontroller/pkg/posbus github.com/momentum-xyz/ubercontroller/pkg/cmath

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm pbc.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w pbc.go
	# generate pbc_go$(LIBEXT) from pbc.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o pbc_go$(LIBEXT) pbc.go
	# use pybindgen to build the pbc.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _pbc$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated pbc.py python wrapper imports this c-code package
	
	$(GCC) pbc.c  pbc_go$(LIBEXT) -o _pbc$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


