[config]
  [config.CHECKBASE]
    env_substitute = true

[checks]
  [checks.OperatingSystem]
    desc = "Check the minimum operating system versions"
    subchecks = "any"
    [checks.OperatingSystem.checkMacOS]
      desc = "MacOS 10.9 or later (released 2013)"
      checkOS = "macOS >= 10.9"
    [checks.OperatingSystem.checkLinuxOS]
      desc = "Linux 4.0 or later (released 2015)"
      checkOS = "Linux >= 3.0"
    [checks.OperatingSystem.checkWindows]
      desc = "Windows 10 or later (released 2015)"
      checkOS = "Windows >= 10"
  [checks.Environment]
    desc = "Check environment variables common to all development environments"
    [checks.Environment.Path]
      decs = "Paths to search for executables"
      checkEnv = "$PATH"
    [checks.Environment.Username]
      subchecks = "any"
      [checks.Environment.Username.UnixUsername]
        desc = "The current username"
        checkEnv = "$USER"
        regex = "[a-z_][a-z0-9_-]*[$]?"
      [checks.Environment.Username.WindowsUsername]
        desc = "The current username"
        checkEnv = "$USERNAME"
        regex = "[a-z_][a-z0-9_-]*[$]?"
  [checks.Paths]
    desc = "Checks the existence of needed files and directories"
    [checks.Paths.ChecksFile]
      desc = "Checks that at least one checks file exists"
      subchecks = "any"
      [checks.Paths.ChecksFile.Geomancy]
        desc = "Check for the 'geomancy.toml' file"
        checkPath = "examples/geomancy.toml"
        type = "file"
      [checks.Paths.ChecksFile.Pyproject]
        desc = "Check for 'pyproject.toml' file"
        checkPath = "examples/pyproject.toml"
        type = "file"
      [checks.Paths.ChecksFile.missing]
        desc = "Check a missing file"
        checkPath = ".missing__.txt"
        type = "file"
  [checks.Executables]
    desc = "Check the availability of commands and their versions"
    [checks.Executables.Python]
      desc = "Python interpreter"
      checkExec = "python3>=3.11"
  [checks.PythonPackages]
    desc = "Check the presence and, optional, the version of python packages"
    [checks.PythonPackages.Geomancy]
      desc = "Geomancy python package"
      checkPythonPkg = "geomancy>=0.8"
